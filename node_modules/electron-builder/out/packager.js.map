{
  "version": 3,
  "file": "packager.js",
  "sourceRoot": "",
  "sources": [
    "../src/packager.ts"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;uEAgaO,AAAK,WAA2B,AAA6B;AAClE,2BAAmB,AAAc;AAC/B,AAAM,AAAC,sBAAG,AAAM,MAAgG,gGAAC,AAAO,QAAC,AAAQ,aAAK,AAAO,UAAG,AAAO,UAAG,AAAO,AAAC,OAAE,AACtK;AAAC;AAED,YAAI,AAAmB;AACvB,YAAI,AAAC;AACH,AAAW,0BAAG,CAAC,MAAM,AAAY,AAAC,cAAC,AAAI,AAAE,AAC3C;AAAC,UACD,AAAK,AAAC,OAAC,AAAC,AAAC,GAAC,AAAC;AACT,AAAE,AAAC,gBAAC,AAAC,EAAC,AAAI,SAAK,AAAQ,AAAC,UAAC,AAAC;AACxB,sBAAM,IAAI,AAAK,MAAC,AAAS,UAAC,AAAkB,AAAC,AAAC,AAChD;AAAC,AACD,AAAI,mBAAC,AAAC;AACJ,sBAAM,IAAI,AAAK,AAAC,oCAA8B,AAAC,CAAE,AAAC,AACpD;AAAC,AACH;AAAC;AAED,AAAE,AAAC,YAAC,AAAW,YAAC,AAAU,WAAC,AAAO,AAAC,AAAC,UAAC,AAAC;AACpC,AAAW,0BAAG,AAAW,YAAC,AAAS,UAAC,AAAO,QAAC,AAAM,AAAC,AACrD;AAAC;AAED,cAAM,AAAU,aAAG,AAAW,YAAC,AAAO,QAAC,AAAG,AAAC;AAC3C,AAAE,AAAC,YAAC,AAAU,aAAG,AAAC,AAAC,GAAC,AAAC;AACnB,AAAW,0BAAG,AAAW,YAAC,AAAS,UAAC,AAAC,GAAE,AAAU,AAAC,AACpD;AAAC;AAED,cAAM,AAAW,cAAG,AAAW,YAAC,AAAO,QAAC,AAAG,AAAC;AAC5C,AAAE,AAAC,YAAC,AAAW,cAAG,AAAC,AAAC,GAAC,AAAC;AACpB,AAAW,0BAAG,AAAW,YAAC,AAAS,UAAC,AAAC,GAAE,AAAW,AAAC,AACrD;AAAC;AAED,AAAE,AAAC,YAAC,AAAW,YAAC,AAAK,MAAC,AAAG,AAAC,KAAC,AAAM,WAAK,AAAC,AAAC,GAAC,AAAC;AACxC,AAAW,2BAAI,AAAI,AACrB;AAAC;AAED,AAAE,AAAC,YAAC,AAAiB,oCAAC,AAAW,aAAE,AAAO,AAAC,AAAC,UAAC,AAAC;AAC5C,kBAAM,IAAI,AAAK,MAAC,AAAS,AAAC,wDAA8C,AAAW,WAAE,AAAC,AAAC,AACzF;AAAC,AACH;AAAC;;;;;;;;;;;AAvcD,AAAO,AAAE,AAAW,AAAE,AAAM,AAAuB,AACnD,AAAO,AAAe,AAAM,AAAgB;;;;;;AAC5C,AAAO,AAAE,AAAI,AAAE,AAAQ,AAAU,AAAM,AAAuB;;;;;;AAC9D,AAAO,AAAE,AAA0B,AAAE,AAAI,AAAE,AAAe,AAAE,AAAG,AAAE,AAAM,AAAuB;;;;;;AAC9F,AAAO,AAAE,AAAU,AAAE,AAAM,AAAsC;;;;;;AACjE,AAAO,AAAE,AAAG,AAAE,AAAI,AAAE,AAAM,AAA+B;;;;;;AACzD,AAAO,AAAE,AAAG,AAAE,AAAc,AAAE,AAAM,AAAmC;;;;;;AACvE,AAAO,AAAE,AAAM,AAAE,AAAM,AAA+B;;;;;;AACtD,AAAO,AAAE,AAAY,AAAE,AAAM,AAAQ;;;;AACrC,AAAO,AAAK,AAAI,AAAM,AAAM;;;;AAC5B,AAAO,AAAE,AAAE,AAAI,AAAiB,AAAE,AAAM,AAAQ;;;;;;AAChD,AAAO,AAAE,AAAO,AAAE,AAAM,AAAW;;;;;;AAKnC,AAAO,AAAE,AAAiB,AAAE,AAAM,AAAkB;;;;;;AACpD,AAAO,AAAE,AAAa,AAAE,AAAM,AAAyB;;;;;;AACvD,AAAO,AAAE,AAAY,AAAE,AAAkB,AAAE,AAAU,AAAE,AAAe,AAAE,AAAM,AAAwB;;;;;;AAEtG,AAAO,AAAE,AAAS,AAAE,AAAgB,AAAE,AAAM,AAAQ;;;;;;;;AAGpD,oBAAoB,AAAqB,SAAE,AAAa,OAAE,AAAiB;AACzE,AAAO,YAAC,AAAE,GAAC,AAAK,OAAE,AAAO,AAAC,AAC5B;AAAC,AAED,AAAM;;AAyCJ,AAAoC;AACpC,gBAAqB,AAAwB,SAAmB,AAAoC;AAA/E,aAAO,UAAP,AAAO,AAAiB;AAAmB,aAAiB,oBAAjB,AAAiB,AAAmB;AAtBpG,aAAiC,oCAAG,AAAI;AAI/B,aAAY,eAAG,AAAI,AAAY,AAAE;AAIjC,aAAc,iBAAG,AAAI,AAAM,AAAE;AAIrB,aAAiB,oBAA8D,AAAE;AAWhG,AAAI,aAAC,AAAU,aAAG,AAAO,QAAC,AAAU,cAAI,AAAI,OAAG,AAAO,QAAC,AAAG,AAAE,QAAG,AAAI,MAAC,AAAO,QAAC,AAAO,QAAC,AAAU,AAAC,AACjG;AAAC;AApCD,QAAI,AAAkB;AACpB,AAAM,eAAC,AAAI,KAAC,AAAmB,AACjC;AAAC;AAMD,QAAI,AAAM;AACR,AAAM,eAAC,AAAI,KAAC,AAAO,AACrB;AAAC;AAgBD,QAAI,AAAc;AAChB,AAAE,AAAC,YAAC,AAAI,KAAC,AAAe,mBAAI,AAAI,AAAC,MAAC,AAAC;AACjC,AAAI,iBAAC,AAAe,kBAAG,AAAiB,mEAAC,AAAI,KAAC,AAAO,QAAC,AAAQ,UAAE,AAAI,KAAC,AAAW,AAAC,AACnF;AAAC;AACD,AAAM,eAAC,AAAI,KAAC,AAAe,AAC7B;AAAC;AAOD,AAAmB,wBAAC,AAA2D;AAC7E,AAAI,aAAC,AAAiB,kBAAC,AAAI,KAAC,AAAO,AAAC,AACtC;AAAC;AAED,AAAe,oBAAC,AAAyC;AACvD,AAAU,mBAAC,AAAI,KAAC,AAAY,cAAE,AAAiB,mBAAE,AAAO,AAAC;AACzD,AAAM,eAAC,AAAI,AACb;AAAC;AAED,AAAuB,4BAAC,AAAsB;AAC5C,AAAI,aAAC,AAAY,aAAC,AAAI,KAAC,AAAiB,mBAAE,AAAK,AAAC,AAClD;AAAC;AAEK,AAAK,SAAX,AAAK;;;;AACH,AAAkC;AAClC,kBAAM,AAAsB,yBAAG,AAAI,MAAC,AAAO,QAAC,AAAW;AACvD,AAAE,AAAC,gBAAC,AAAsB,0BAAI,AAAI,AAAC,MAAC,AAAC;AACnC,AAAI,gDAAC,AAAsD,AAAC,AAC9D;AAAC;AAED,gBAAI,AAAU,aAAkB,AAAI;AACpC,gBAAI,AAAiB,oBAAG,AAAI,MAAC,AAAO,QAAC,AAAM;AAC3C,AAAE,AAAC,gBAAC,OAAO,AAAiB,sBAAK,AAAQ,AAAC,UAAC,AAAC;AAC1C,AAA8B;AAC9B,AAAU,6BAAG,AAAiB;AAC9B,AAAiB,oCAAG,AAAI,AAC1B;AAAC;AAED,AAAE,AAAC,gBAAC,AAAsB,0BAAI,AAAI,AAAC,MAAC,AAAC;AACnC,AAAE,AAAC,oBAAC,AAAiB,qBAAI,AAAI,AAAC,MAAC,AAAC;AAC9B,0BAAM,IAAI,AAAK,MAAC,AAAsD,AAAC,AACzE;AAAC;AACD,AAAiB,oCAAG,AAAsB,uBAAC,AAAK,AAClD;AAAC;AAED,kBAAM,AAAU,aAAG,AAAI,MAAC,AAAU;AAClC,kBAAM,AAAmB,sBAAG,AAAM,MAAC,AAAU,cAAI,AAAI,OAAG,AAAU,8DAAC,AAAU,AAAC,cAAG,AAAY,gEAAC,AAAI,MAAC,AAAO,QAAC,AAAU,YAAE,AAAU,AAAC,aAAE,AAAU,AAAC,AAAC;AAChJ,kBAAM,AAAM,SAAG,AAAU,oDAAC,AAAE,IAAE,AAAmB,qBAAE,AAAiB,AAAC;AAErE,kBAAM,AAAa,gBAAG,AAAI,MAAC,AAAO,QAAC,AAAa;AAChD,AAAE,AAAC,gBAAC,AAAa,iBAAI,AAAI,AAAC,MAAC,AAAC;AAC1B,sBAAM,AAAkB,qBAAG,AAAa,cAAC,AAAK;AAC9C,AAAE,AAAC,oBAAC,AAAkB,sBAAI,AAAI,AAAC,MAAC,AAAC;AAC/B,AAAU,wEAAC,AAAM,QAAE,AAAkB,AAAC;AACtC,2BAAO,AAAa,cAAC,AAAK,AAC5B;AAAC;AACD,AAAE,AAAC,oBAAC,AAAa,cAAC,AAAW,eAAI,AAAI,AAAC,MAAC,AAAC;AACtC,AAAI,AAAC,oDAA2E,AAAC;AACjF,AAAU,wEAAC,AAAM,QAAE,EAAC,AAAW,aAAE,AAAa,cAAC,AAAW,AAAC,AAAC;AAC5D,2BAAO,AAAa,cAAC,AAAW,AAClC;AAAC,AACH;AAAC;AAED,AAAI,kBAAC,AAAO,UAAG,AAAM;AACrB,AAAI,kBAAC,AAAM,SAAG,4FAAiC,AAAU,2EAAM,AAAM,OAAC,AAAW;AAAE,AAAE,uBAAI,AAAG,GAAC,AAAG,AAAC,AAAC;aAAvC,AAAG,CAA1C,AAA0B;AAE9C,AAAI,kBAAC,AAAiC,oCAAG,AAAI,MAAC,AAAM,WAAK,AAAU;AAEnE,kBAAM,AAAc,iBAAG,AAAI,MAAC,AAAI,KAAC,AAAU,YAAE,AAAc,AAAC;AAC5D,kBAAM,AAAc,iBAAG,AAAI,MAAC,AAAiC,oCAAG,AAAI,MAAC,AAAI,KAAC,AAAI,MAAC,AAAM,QAAE,AAAc,AAAC,kBAAG,AAAc;AAEvH,kBAAM,AAAI,MAAC,AAAmB,oBAAC,AAAc,gBAAE,AAAa,AAAC;AAE7D,AAAE,AAAC,gBAAC,AAAI,MAAC,AAAiC,AAAC,mCAAC,AAAC;AAC3C,AAAI,sBAAC,AAAW,cAAG,AAAU,qDAAC,MAAM,AAAe,mEAAC,AAAc,AAAC,kBAAE,AAAsB,AAAC,AAC9F;AAAC,AACD,AAAI,mBAAC,AAAC;AACJ,AAAI,sBAAC,AAAW,cAAG,AAAI,MAAC,AAAQ;AAChC,AAAE,AAAC,oBAAC,AAAI,MAAC,AAAO,QAAC,AAAW,eAAI,AAAI,AAAC,MAAC,AAAC;AACrC,AAAU,wEAAC,AAAI,MAAC,AAAW,aAAE,AAAI,MAAC,AAAO,QAAC,AAAW,AAAC,AACxD;AAAC;AACD,AAAE,AAAC,oBAAC,AAAa,iBAAI,AAAI,AAAC,MAAC,AAAC;AAC1B,AAAU,wEAAC,AAAI,MAAC,AAAW,aAAE,AAAa,AAAC,AAC7C;AAAC,AACH;AAAC;AAED,AAAI,kBAAC,AAAa,cAAC,AAAc,gBAAE,AAAc,AAAC;AAClD,AAAuB,oCAAC,AAAI,MAAC,AAAM,AAAC;AAEpC,AAAI,kBAAC,AAAe,kBAAG,MAAM,AAAkB,sEAAC,AAAI,MAAC,AAAM,QAAE,AAAU,YAAE,AAAI,MAAC,AAAkB,qBAAG,AAAI,MAAC,AAAQ,WAAG,AAAI,AAAC;AAExH,AAAI,kBAAC,AAAO,UAAG,AAAI,AAAO,0CAAC,AAAI,MAAC,AAAQ,AAAE,AAAI,AAAC;AAC/C,kBAAM,AAAY,eAA8B,AAAE;AAClD,AAAM,mBAAC,wDAAqB,AAAI,MAAC,AAAO,QAAC,AAAY,AAAC;AAAE,uBAAM,AAAG,oDAAc,AAAG;AAAC,AAAE,2BAAI,AAAE,AAAE,AAAC;iBAA5B,AAAY,EAAiB,AAAM,OAAC,AAAI,MAAC,AAAc,eAAC,AAAO,AAAE,AAAC,AAAC,AAAC,AACxI;aADe,AAAc;;AAC5B;AAEa,AAAmB,uBAAzB,AAAK,CAAqB,AAAsB,gBAAE,AAAkB;;;;AAC1E,gBAAI,AAAC;AACH,AAAI,uBAAC,AAAQ,WAAG,AAAU,qDAAC,MAAM,AAAe,mEAAC,AAAc,AAAC,kBAAE,AAAI,OAAC,AAAO,QAAC,AAAW,aAAE,AAAa,AAAC,AAC5G;AAAC,cACD,AAAK,AAAC,OAAC,AAAC,AAAC,GAAC,AAAC;AACT,AAAE,AAAC,oBAAC,AAAC,EAAC,AAAI,SAAK,AAAQ,AAAC,UAAC,AAAC;AACxB,0BAAM,AAAC,AACT;AAAC;AAED,oBAAI,AAAC;AACH,0BAAM,AAAI,OAAG,AAAW,uEAAC,AAAI,MAAC,AAAI,KAAC,AAAI,OAAC,AAAU,YAAE,AAAU,AAAC,aAAE,AAAc,AAAC;AAChF,AAAE,AAAC,wBAAC,AAAI,QAAI,AAAI,AAAC,MAAC,AAAC;AACjB,AAAI,+BAAC,AAAQ,WAAG,AAAI,KAAC,AAAK,MAAC,AAAI,KAAC,AAAQ,AAAE,AAAC;AAC3C,AAAI,+BAAC,AAAmB,sBAAG,AAAI;AAC/B,AAAM,AACR;AAAC,AACH;AAAC,kBACD,AAAK,AAAC,OAAC,AAAC,AAAC,GAAC,AAAC;AACT,AAAE,AAAC,wBAAC,AAAC,EAAC,AAAI,SAAK,AAAQ,AAAC,UAAC,AAAC;AACxB,8BAAM,AAAC,AACT;AAAC,AACH;AAAC;AAED,sBAAM,IAAI,AAAK,AAAC,yCAAmC,AAAI,MAAC,AAAO,QAAC,AAAc,AAAC,eAAE,AAAC,AACpF;AAAC,AACH;;AAAC;AAEa,AAAO,WAAb,AAAK,CAAS,AAAuC;;;;AAC3D,kBAAM,AAAS,YAAwB,AAAE;AACzC,kBAAM,AAAM,eAAQ,AAAO,QAAC,AAAI,OAAC,AAAU,2EAAM,AAAI,OAAC,AAAM,OAAC,AAAW;AAAE,AAAE,uBAAI,AAAG,GAAC,AAAM,AAAC;aAA9C,AAAG,KAA+C,AAAM,AAAC,MAAvF,AAAI;AAEnB,kBAAM,AAAgB,mBAAuC,IAAI,AAAG,AAAE;AAEtE,AAAqC;AACrC,gBAAI,AAAS,YAAG,AAAI,OAAC,AAAO,QAAC,AAAW,eAAI,AAAI,QAAI,AAAI,OAAC,AAAO,QAAC,AAAuB,2BAAI,AAAI;AAChG,AAAG,AAAC,AAAC,AAAM,+BAA0B,AAAI,OAAC,AAAO,QAAC,AAAQ,AAAC;AAAC,AAAC;;sBAAjD,AAAQ;sBAAE,AAAU,AAAC;;AAC/B,AAAE,AAAC,oBAAC,AAAI,OAAC,AAAiB,kBAAC,AAAS,AAAC,WAAC,AAAC;AACrC,AAAK,AACP;AAAC;AAED,AAAE,AAAC,oBAAC,AAAQ,aAAK,AAAQ,+DAAC,AAAG,OAAI,AAAO,QAAC,AAAQ,aAAK,AAAQ,+DAAC,AAAO,QAAC,AAAQ,AAAC,UAAC,AAAC;AAChF,0BAAM,IAAI,AAAK,MAAC,AAAwI,AAAC,AAC3J;AAAC;AAED,oBAAI,AAAS,YAA2B,AAAI;AAC5C,AAAE,AAAC,oBAAC,AAAS,aAAI,AAAO,QAAC,AAAQ,aAAK,AAAO,WAAI,AAAQ,aAAK,AAAQ,+DAAC,AAAO,AAAC,SAAC,AAAC;AAC/E,AAAS,gCAAG,AAAI,gEAAC,AAAM,QAAE,CAAC,AAAW,AAAC,AAAC,AACzC;AAAC;AAED,sBAAM,AAAM,SAAG,AAAI,OAAC,AAAY,aAAC,AAAQ,UAAE,AAAY,AAAC;AACxD,sBAAM,AAAY,eAAwB,IAAI,AAAG,AAAE;AACnD,AAAgB,iCAAC,AAAG,IAAC,AAAQ,UAAE,AAAY,AAAC;AAE5C,AAAG,AAAC,AAAC,AAAM,oCAAmB,AAAU,AAAC;AAAC,AAAC;;0BAA/B,AAAI;0BAAE,AAAO,AAAC;;AACxB,AAAE,AAAC,wBAAC,AAAI,OAAC,AAAiB,kBAAC,AAAS,AAAC,WAAC,AAAC;AACrC,AAAK,AACP;AAAC;AAED,0BAAM,AAAI,OAAC,AAAsB,uBAAC,AAAQ,UAAE,AAAI,AAAC;AAEjD,AAAE,AAAC,wBAAC,AAAI,OAAC,AAAiB,kBAAC,AAAS,AAAC,WAAC,AAAC;AACrC,AAAK,AACP;AAAC;AAED,AAAE,AAAC,wBAAC,AAAS,aAAI,AAAS,aAAI,AAAI,AAAC,MAAC,AAAC;AACnC,AAAS,oCAAG,AAAK;AACjB,8BAAM,AAAgB,iBAAC,AAAS,AAAC,AACnC;AAAC;AAED,0BAAM,AAAM,OAAC,AAAI,KAAC,AAAM,QAAE,AAAI,MAAE,AAAa,6DAAC,AAAY,cAAE,AAAO,SAAE,AAAM,QAAE,AAAM,QAAE,AAAY,AAAC,eAAE,AAAS,AAAC,AAChH;AAAC;AAED,AAAE,AAAC,oBAAC,AAAI,OAAC,AAAiB,kBAAC,AAAS,AAAC,WAAC,AAAC;AACrC,AAAK,AACP;AAAC;AAED,AAAG,AAAC,qBAAC,MAAM,AAAM,UAAI,AAAY,aAAC,AAAM,AAAE,AAAC,UAAC,AAAC;AAC3C,AAAS,8BAAC,AAAI,KAAC,AAAM,OAAC,AAAW,AAAE,AAAC,AACtC;AAAC,AACH;AAAC;AAED,AAAE,AAAC,gBAAC,AAAI,OAAC,AAAiB,kBAAC,AAAS,AAAC,WAAC,AAAC;AACrC,AAAG,AAAC,qBAAC,MAAM,AAAI,QAAI,AAAS,AAAC,WAAC,AAAC;AAC7B,AAAE,AAAC,wBAAC,AAAQ,YAAI,AAAI,AAAC,MAAC,AAAC;AACE,AAAK,6BAAC,AAAM,AAAE,AACvC;AAAC,AACH;AAAC,AACH;AAAC,AACD,AAAI,mBAAC,AAAC;AACJ,sBAAM,AAAe,kDAAC,AAAG,IAAC,AAAS,AAAC,AACtC;AAAC;AACD,AAAM,mBAAC,AAAgB,AACzB;;AAAC;AAEO,AAAY,iBAAC,AAAkB,UAAE,AAAuC;AAC9E,AAAE,AAAC,YAAC,AAAI,KAAC,AAAO,QAAC,AAAuB,2BAAI,AAAI,AAAC,MAAC,AAAC;AACjD,AAAM,mBAAC,AAAI,KAAC,AAAO,QAAC,AAAwB,wBAAC,AAAI,MAAG,AAAQ,UAAE,AAAY,AAAC,AAC7E;AAAC;AAED,AAAM,AAAC,gBAAC,AAAQ,AAAC,AAAC,AAAC;AACjB,iBAAK,AAAQ,+DAAC,AAAG;AACjB,AAAC;AACC,0BAAM,AAAW,cAAuB,AAAO,QAAC,AAAe,AAAC,iBAAC,AAAO;AACxE,AAAM,2BAAC,IAAI,AAAW,YAAC,AAAI,AAAC,AAC9B;AAAC;AAED,iBAAK,AAAQ,+DAAC,AAAO;AACrB,AAAC;AACC,0BAAM,AAAW,cAAuB,AAAO,QAAC,AAAe,AAAC,iBAAC,AAAW;AAC5E,AAAM,2BAAC,IAAI,AAAW,YAAC,AAAI,AAAC,AAC9B;AAAC;AAED,iBAAK,AAAQ,+DAAC,AAAK;AACjB,AAAM,uBAAC,AAAI,KAAC,AAAO,QAAC,AAAiB,AAAC,mBAAC,AAAa,AAAC,eAAC,AAAI,AAAC;AAE7D;AACE,sBAAM,IAAI,AAAK,AAAC,2BAAqB,AAAQ,QAAE,AAAC,AACpD,AAAC,AACH;;AAAC;AAEO,AAAa,kBAAC,AAAsB,gBAAE,AAAyB;AACrE,cAAM,AAAM,SAAkB,AAAE;AAChC,cAAM,AAAW,cAAI,AAAuB,eAAxB;AAClB,AAAM,mBAAC,AAAI,AAAC,wBAAmB,AAAe,sDAAuC,AAAc,cAAI,AAAC,AAC1G;AAAC;AAED,cAAM,AAAa,gBAAG,CAAC,AAAY,MAAE,AAAiB;AACpD,AAAE,AAAC,gBAAC,AAAe,2EAAC,AAAK,AAAC,AAAC,QAAC,AAAC;AAC3B,AAAW,4BAAC,AAAI,AAAC,AACnB;AAAC,AACH;AAAC;AAED,cAAM,AAAW,cAAG,AAAI,KAAC,AAAQ;AAEjC,AAAa,sBAAC,AAAM,QAAE,AAAW,YAAC,AAAI,AAAC;AACvC,AAAa,sBAAC,AAAa,eAAE,AAAW,YAAC,AAAW,AAAC;AACrD,AAAa,sBAAC,AAAS,WAAE,AAAW,YAAC,AAAO,AAAC;AAE7C,AAAiB,0BAAC,AAAI,KAAC,AAAW,YAAC,AAAY,cAAE,AAAM,AAAC;AACxD,AAAE,AAAC,YAAO,AAAY,gBAAK,AAAI,KAAC,AAAW,AAAC,aAAC,AAAC;AAC5C,AAAiB,8BAAC,AAAW,YAAC,AAAY,cAAE,AAAM,AAAC;AAEnD,AAAE,AAAC,gBAAO,AAAY,YAAC,AAAK,SAAI,AAAI,AAAC,MAAC,AAAC;AACrC,AAAM,uBAAC,AAAI,AAAC,iDAA4C,AAAc,8GAAgG,AAAiB,iBAAG,AAAC,AAC7L;AAAC,AACH;AAAC;AAED,cAAM,AAAM,SAAQ,AAAI,KAAC,AAAM;AAC/B,AAAE,AAAC,YAAC,AAAM,OAAC,AAAU,AAAC,eAAI,AAAI,AAAC,MAAC,AAAC;AAC/B,AAAM,mBAAC,AAAI,KAAC,AAA+H,AAAC,AAC9I;AAAC;AACD,AAAE,AAAC,YAAC,AAAM,OAAC,AAAK,AAAC,UAAI,AAAI,AAAC,MAAC,AAAC;AAC1B,AAAM,mBAAC,AAAI,AAAC,KAA8D,AAAC,AAC7E;AAAC;AACD,AAAE,AAAC,YAAC,AAAM,OAAC,AAAe,AAAC,oBAAI,AAAI,AAAC,MAAC,AAAC;AACpC,AAAM,mBAAC,AAAI,AAAC,KAA8E,AAAC,AAC7F;AAAC;AACD,AAAE,AAAC,YAAC,AAAM,OAAC,AAAmB,AAAC,wBAAI,AAAI,AAAC,MAAC,AAAC;AACxC,AAAM,mBAAC,AAAI,AAAC,KAAqF,AAAC,AACpG;AAAC;AAED,cAAM,AAAM,SAAG,AAAW,YAAC,AAAM;AACjC,AAAE,AAAC,YAAC,AAAM,UAAI,AAAI,AAAC,MAAC,AAAC;AACnB,AAAM,mBAAC,AAAI,AAAC,kEAA6D,AAAc,cAAsD,AAAC,AAChJ;AAAC;AAED,AAAE,AAAC,YAAC,AAAM,OAAC,AAAI,QAAI,AAAI,AAAC,MAAC,AAAC;AACxB,AAAM,mBAAC,AAAI,AAAC,qFAAgF,AAAc,cAAG,AAAC,AAChH;AAAC;AAED,AAAE,AAAC,YAAC,AAAM,OAAC,AAAK,SAAI,AAAI,AAAC,MAAC,AAAC;AACzB,AAAM,mBAAC,AAAI,KAAC,AAA6E,AAAC,AAC5F;AAAC;AAED,AAAE,AAAC,YAAC,AAAM,OAAC,AAAM,SAAG,AAAC,AAAC,GAAC,AAAC;AACtB,kBAAM,IAAI,AAAK,MAAC,AAAM,OAAC,AAAI,KAAC,AAAI,AAAC,AAAC,AACpC;AAAC,AACH;AAAC;AAEa,AAAsB,0BAA5B,AAAK,CAAwB,AAAkB,UAAE,AAAU;;;;AACjE,AAAE,AAAC,gBAAC,AAAI,OAAC,AAAO,QAAC,AAAW,eAAI,AAAI,AAAC,MAAC,AAAC;AACrC,AAAM,AACR;AAAC;AAED,kBAAM,AAAO,UAAG,AAAI,OAAC,AAAM;AAC3B,AAAE,AAAC,gBAAC,AAAO,QAAC,AAAc,mBAAK,AAAI,AAAC,MAAC,AAAC;AACpC,AAAG,AAAC,sFAAuC,AAAI,2DAAC,AAAI,AAAC,KAAE,AAAC;AACxD,sFAAW,AAAO,QAAC,AAAQ,aAAK,AAAO,UAAG,AAAc,iBAAG,AAAU,YAAE,CAAC,AAAS,AAAC;AAChF,AAAG,yBAAE,AAAS,uCAAC,AAAI,OAAC,AAAe,iBAAE,AAAQ,SAAC,AAAQ,UAAE,AAAI,2DAAC,AAAI,AAAC,OAAE,AAAI,AAAC,AAC1E,AAAC,AACJ;AAHsF,iBAA9E,AAAI;AAGX;AAED,AAAE,AAAC,gBAAC,AAAO,QAAC,AAAU,eAAK,AAAK,AAAC,OAAC,AAAC;AACjC,AAAG,+CAAC,AAAkE,AAAC;AACvE,AAAM,AACR;AAAC;AAED,kBAAM,AAAW,cAAG,AAAO,QAAC,AAAW;AACvC,AAAE,AAAC,gBAAC,AAAW,eAAI,AAAI,AAAC,MAAC,AAAC;AACxB,sBAAM,AAAmC,sCAAG;AAC1C,AAAM,4BAAE,AAAI,OAAC,AAAM;AACnB,AAAe,qCAAE,AAAI,OAAC,AAAe;AACrC,AAAQ;AACR,AAAI,0BAAE,AAAI,2DAAC,AAAI,AAAC,AACjB,AAAC;AAL4D,iBAAZ,AAAW;AAM7D,AAAE,AAAC,oBAAC,CAAC,AAAmC,AAAC,qCAAC,AAAM,AAClD;AAAC;AAED,AAAE,AAAC,gBAAC,AAAO,QAAC,AAAsB,2BAAK,AAAI,QAAI,AAAQ,SAAC,AAAQ,aAAK,AAAO,QAAC,AAAQ,AAAC,UAAC,AAAC;AACtF,AAAG,+CAAC,AAA6D,AAAC,AACpE;AAAC,AACD,AAAI,mBAAC,AAAC;AACJ,sBAAM,AAAgB,8CAAC,AAAO,SAAE,AAAI,OAAC,AAAM,QAAE,AAAI,OAAC,AAAe,iBAAE,AAAQ,SAAC,AAAQ,UAAE,AAAI,2DAAC,AAAI,AAAC,AAAC,AACnG;AAAC,AACH;;AAAC;AAED,AAAS,cAAC,AAAyB;AACjC,cAAM,AAAS,YAAG,AAAI,KAAC,AAAM,OAAC,AAAS;AACvC,cAAM,AAAQ,WAAG,AAAI,KAAC,AAAiB,kBAAC,AAAK,AAAE;AAC/C,AAAE,AAAC,YAAC,AAAS,aAAI,AAAI,AAAC,MAAC,AAAC;AACtB,AAA8B;AAC9B,AAAQ,qBAAC,AAAI,KAAC,AAAS,AAAC,AAC1B;AAAC;AACD,AAAM,eAAC,AAAe,kDAAC,AAAI,KAAC,AAAQ,UAAE,AAAE,MAAI,AAAE,GAAC,AAAO,AAAC,AAAC,AAC1D;AAAC,AACF,AAED,AAAM;;;4BAA6B,AAA8D;AAC/F,UAAM,AAAS,YAAG,AAAY,gBAAI,AAAI,QAAI,AAAK,MAAC,AAAO,QAAC,AAAY,AAAC,gBAAkC,AAAa,eAAG,CAAC,AAAY,AAAC;AACrI,AAAE,AAAC,QAAM,AAAS,aAAI,AAAI,QAAI,AAAS,UAAC,AAAM,WAAK,AAAC,AAAC,GAAC,AAAC;AACrD,AAAM,eAAC,CAAC,AAAQ,+DAAC,AAAU,WAAC,AAAO,QAAC,AAAQ,AAAC,AAAC,AAChD;AAAC,AACD,AAAI,eAAK,AAAS,UAAC,AAAC,AAAC,OAAK,AAAK,AAAC,OAAC,AAAC;AAChC,AAAE,AAAC,YAAC,AAAO,QAAC,AAAQ,aAAK,AAAQ,+DAAC,AAAG,IAAC,AAAQ,AAAC,UAAC,AAAC;AAC/C,AAAM,mBAAC,CAAC,AAAQ,+DAAC,AAAG,KAAE,AAAQ,+DAAC,AAAK,OAAE,AAAQ,+DAAC,AAAO,AAAC,AACzD;AAAC,AACD,AAAI,mBAAK,AAAO,QAAC,AAAQ,aAAK,AAAQ,+DAAC,AAAK,MAAC,AAAQ,AAAC,UAAC,AAAC;AACtD,AAAsC;AACtC,AAAM,mBAAC,CAAC,AAAQ,+DAAC,AAAK,OAAE,AAAQ,+DAAC,AAAO,AAAC,AAC3C;AAAC,AACD,AAAI,SAJC,AAAE,AAAC,MAIH,AAAC;AACJ,AAAM,mBAAC,CAAC,AAAQ,+DAAC,AAAO,AAAC,AAC3B;AAAC,AACH;AAAC,AACD,AAAI,KAZC,AAAE,AAAC,MAYH,AAAC;AACJ,AAAM,eAAC,AAAS,UAAC,AAAG,IAAC,AAAE,MAAI,AAAE,AAAY,AAAQ,+EAAG,AAAE,KAAG,AAAQ,+DAAC,AAAU,WAAC,AAAG,AAAC,AAAC,AACpF;AAAC,AACH;AAAC;AAED,iCAAiC,AAAY;AAC3C,AAAG,AAAC,SAAC,MAAM,AAAI,QAAI,CAAC,AAAK,OAAE,AAAK,OAAE,AAAQ,UAAE,AAAS,WAAE,AAAU,YAAE,AAAK,OAAE,AAAM,QAAE,AAAM,QAAE,AAAgB,AAAC,AAAC,mBAAC,AAAC;AAC5G,AAAE,AAAC,YAAC,AAAI,QAAI,AAAO,AAAC,SAAC,AAAC;AACpB,kBAAM,IAAI,AAAK,AAAC,gBAAU,AAAI,IAAiC,AAAC,AAClE;AAAC,AACH;AAAC,AACH;AAAC,AAED,AAAM;;AAyCN,2BAA2B,AAA0D,cAAE,AAAqB;AAC1G,AAAE,AAAC,QAAC,AAAY,gBAAI,AAAI,AAAC,MAAC,AAAC;AACzB,AAAM,AACR;AAAC;AAED,AAAG,AAAC,SAAC,MAAM,AAAI,QAAI,CAAC,AAAU,YAAE,AAAmB,qBAAE,AAAkB,AAAC,AAAC,qBAAC,AAAC;AACzE,AAAE,AAAC,YAAC,AAAI,QAAI,AAAY,AAAC,cAAC,AAAC;AACzB,AAAM,mBAAC,AAAI,iBAAa,AAAI,IAA0C,AAClE,0CADQ,GACgE,AAAC,AAC/E;AAAC,AACH;AAAC,AACH;AAAC",
  "sourcesContent": [
    "import { extractFile } from \"asar-electron-builder\"\nimport BluebirdPromise from \"bluebird-lst-c\"\nimport { Arch, Platform, Target } from \"electron-builder-core\"\nimport { computeDefaultAppDirectory, exec, isEmptyOrSpaces, use } from \"electron-builder-util\"\nimport { deepAssign } from \"electron-builder-util/out/deepAssign\"\nimport { log, warn } from \"electron-builder-util/out/log\"\nimport { all, executeFinally } from \"electron-builder-util/out/promise\"\nimport { TmpDir } from \"electron-builder-util/out/tmp\"\nimport { EventEmitter } from \"events\"\nimport * as path from \"path\"\nimport { lt as isVersionLessThan } from \"semver\"\nimport { AppInfo } from \"./appInfo\"\nimport MacPackager from \"./macPackager\"\nimport { AfterPackContext, Config, Metadata } from \"./metadata\"\nimport { ArtifactCreated, BuildInfo, PackagerOptions, SourceRepositoryInfo } from \"./packagerApi\"\nimport { PlatformPackager } from \"./platformPackager\"\nimport { getRepositoryInfo } from \"./repositoryInfo\"\nimport { createTargets } from \"./targets/targetFactory\"\nimport { doLoadConfig, getElectronVersion, loadConfig, readPackageJson } from \"./util/readPackageJson\"\nimport { WinPackager } from \"./winPackager\"\nimport { getGypEnv, installOrRebuild } from \"./yarn\"\nimport { CancellationToken } from \"electron-builder-http/out/CancellationToken\"\n\nfunction addHandler(emitter: EventEmitter, event: string, handler: Function) {\n  emitter.on(event, handler)\n}\n\nexport class Packager implements BuildInfo {\n  readonly projectDir: string\n  appDir: string\n\n  metadata: Metadata\n\n  private _isPrepackedAppAsar: boolean\n\n  get isPrepackedAppAsar(): boolean {\n    return this._isPrepackedAppAsar\n  }\n\n  private devMetadata: Metadata\n\n  private _config: Config\n\n  get config(): Config {\n    return this._config\n  }\n\n  isTwoPackageJsonProjectLayoutUsed = true\n\n  electronVersion: string\n\n  readonly eventEmitter = new EventEmitter()\n\n  appInfo: AppInfo\n\n  readonly tempDirManager = new TmpDir()\n\n  private _repositoryInfo: Promise<SourceRepositoryInfo> | null\n\n  private readonly afterPackHandlers: Array<(context: AfterPackContext) => Promise<any> | null> = []\n\n  get repositoryInfo(): Promise<SourceRepositoryInfo> {\n    if (this._repositoryInfo == null) {\n      this._repositoryInfo = getRepositoryInfo(this.appInfo.metadata, this.devMetadata)\n    }\n    return this._repositoryInfo\n  }\n\n  //noinspection JSUnusedGlobalSymbols\n  constructor(readonly options: PackagerOptions, private readonly cancellationToken: CancellationToken) {\n    this.projectDir = options.projectDir == null ? process.cwd() : path.resolve(options.projectDir)\n  }\n\n  addAfterPackHandler(handler: (context: AfterPackContext) => Promise<any> | null) {\n    this.afterPackHandlers.push(handler)\n  }\n\n  artifactCreated(handler: (event: ArtifactCreated) => void): Packager {\n    addHandler(this.eventEmitter, \"artifactCreated\", handler)\n    return this\n  }\n\n  dispatchArtifactCreated(event: ArtifactCreated) {\n    this.eventEmitter.emit(\"artifactCreated\", event)\n  }\n\n  async build(): Promise<Map<Platform, Map<String, Target>>> {\n    //noinspection JSDeprecatedSymbols\n    const devMetadataFromOptions = this.options.devMetadata\n    if (devMetadataFromOptions != null) {\n      warn(\"devMetadata is deprecated, please use config instead\")\n    }\n\n    let configPath: string | null = null\n    let configFromOptions = this.options.config\n    if (typeof configFromOptions === \"string\") {\n      // it is a path to config file\n      configPath = configFromOptions\n      configFromOptions = null\n    }\n\n    if (devMetadataFromOptions != null) {\n      if (configFromOptions != null) {\n        throw new Error(\"devMetadata and config cannot be used in conjunction\")\n      }\n      configFromOptions = devMetadataFromOptions.build\n    }\n\n    const projectDir = this.projectDir\n    const fileOrPackageConfig = await (configPath == null ? loadConfig(projectDir) : doLoadConfig(path.resolve(projectDir, configPath), projectDir))\n    const config = deepAssign({}, fileOrPackageConfig, configFromOptions)\n\n    const extraMetadata = this.options.extraMetadata\n    if (extraMetadata != null) {\n      const extraBuildMetadata = extraMetadata.build\n      if (extraBuildMetadata != null) {\n        deepAssign(config, extraBuildMetadata)\n        delete extraMetadata.build\n      }\n      if (extraMetadata.directories != null) {\n        warn(`--em.directories is deprecated, please specify as --em.build.directories\"`)\n        deepAssign(config, {directories: extraMetadata.directories})\n        delete extraMetadata.directories\n      }\n    }\n\n    this._config = config\n    this.appDir = await computeDefaultAppDirectory(projectDir, use(config.directories, it => it!.app))\n\n    this.isTwoPackageJsonProjectLayoutUsed = this.appDir !== projectDir\n\n    const devPackageFile = path.join(projectDir, \"package.json\")\n    const appPackageFile = this.isTwoPackageJsonProjectLayoutUsed ? path.join(this.appDir, \"package.json\") : devPackageFile\n\n    await this.readProjectMetadata(appPackageFile, extraMetadata)\n\n    if (this.isTwoPackageJsonProjectLayoutUsed) {\n      this.devMetadata = deepAssign(await readPackageJson(devPackageFile), devMetadataFromOptions)\n    }\n    else {\n      this.devMetadata = this.metadata\n      if (this.options.appMetadata != null) {\n        deepAssign(this.devMetadata, this.options.appMetadata)\n      }\n      if (extraMetadata != null) {\n        deepAssign(this.devMetadata, extraMetadata)\n      }\n    }\n\n    this.checkMetadata(appPackageFile, devPackageFile)\n    checkConflictingOptions(this.config)\n\n    this.electronVersion = await getElectronVersion(this.config, projectDir, this.isPrepackedAppAsar ? this.metadata : null)\n\n    this.appInfo = new AppInfo(this.metadata, this)\n    const cleanupTasks: Array<() => Promise<any>> = []\n    return await executeFinally(this.doBuild(cleanupTasks), () => all(cleanupTasks.map(it => it()).concat(this.tempDirManager.cleanup())))\n  }\n\n  private async readProjectMetadata(appPackageFile: string, extraMetadata: any) {\n    try {\n      this.metadata = deepAssign(await readPackageJson(appPackageFile), this.options.appMetadata, extraMetadata)\n    }\n    catch (e) {\n      if (e.code !== \"ENOENT\") {\n        throw e\n      }\n\n      try {\n        const file = extractFile(path.join(this.projectDir, \"app.asar\"), \"package.json\")\n        if (file != null) {\n          this.metadata = JSON.parse(file.toString())\n          this._isPrepackedAppAsar = true\n          return\n        }\n      }\n      catch (e) {\n        if (e.code !== \"ENOENT\") {\n          throw e\n        }\n      }\n\n      throw new Error(`Cannot find package.json in the ${path.dirname(appPackageFile)}`)\n    }\n  }\n\n  private async doBuild(cleanupTasks: Array<() => Promise<any>>): Promise<Map<Platform, Map<String, Target>>> {\n    const distTasks: Array<Promise<any>> = []\n    const outDir = path.resolve(this.projectDir, use(this.config.directories, it => it!.output) || \"dist\")\n\n    const platformToTarget: Map<Platform, Map<String, Target>> = new Map()\n\n    // custom packager - don't check wine\n    let checkWine = this.options.prepackaged == null && this.options.platformPackagerFactory == null\n    for (const [platform, archToType] of this.options.targets!) {\n      if (this.cancellationToken.cancelled) {\n        break\n      }\n\n      if (platform === Platform.MAC && process.platform === Platform.WINDOWS.nodeName) {\n        throw new Error(\"Build for macOS is supported only on macOS, please see https://github.com/electron-userland/electron-builder/wiki/Multi-Platform-Build\")\n      }\n\n      let wineCheck: Promise<string> | null = null\n      if (checkWine && process.platform !== \"win32\" && platform === Platform.WINDOWS) {\n        wineCheck = exec(\"wine\", [\"--version\"])\n      }\n\n      const helper = this.createHelper(platform, cleanupTasks)\n      const nameToTarget: Map<String, Target> = new Map()\n      platformToTarget.set(platform, nameToTarget)\n\n      for (const [arch, targets] of archToType) {\n        if (this.cancellationToken.cancelled) {\n          break\n        }\n\n        await this.installAppDependencies(platform, arch)\n\n        if (this.cancellationToken.cancelled) {\n          break\n        }\n\n        if (checkWine && wineCheck != null) {\n          checkWine = false\n          await checkWineVersion(wineCheck)\n        }\n\n        await helper.pack(outDir, arch, createTargets(nameToTarget, targets, outDir, helper, cleanupTasks), distTasks)\n      }\n\n      if (this.cancellationToken.cancelled) {\n        break\n      }\n\n      for (const target of nameToTarget.values()) {\n        distTasks.push(target.finishBuild())\n      }\n    }\n\n    if (this.cancellationToken.cancelled) {\n      for (const task of distTasks) {\n        if (\"cancel\" in task) {\n          (<BluebirdPromise<any>>task).cancel()\n        }\n      }\n    }\n    else {\n      await BluebirdPromise.all(distTasks)\n    }\n    return platformToTarget\n  }\n\n  private createHelper(platform: Platform, cleanupTasks: Array<() => Promise<any>>): PlatformPackager<any> {\n    if (this.options.platformPackagerFactory != null) {\n      return this.options.platformPackagerFactory!(this,  platform, cleanupTasks)\n    }\n\n    switch (platform) {\n      case Platform.MAC:\n      {\n        const helperClass: typeof MacPackager = require(\"./macPackager\").default\n        return new helperClass(this)\n      }\n\n      case Platform.WINDOWS:\n      {\n        const helperClass: typeof WinPackager = require(\"./winPackager\").WinPackager\n        return new helperClass(this)\n      }\n\n      case Platform.LINUX:\n        return new (require(\"./linuxPackager\").LinuxPackager)(this)\n\n      default:\n        throw new Error(`Unknown platform: ${platform}`)\n    }\n  }\n\n  private checkMetadata(appPackageFile: string, devAppPackageFile: string): void {\n    const errors: Array<string> = []\n    const reportError = (missedFieldName: string) => {\n      errors.push(`Please specify '${missedFieldName}' in the application package.json ('${appPackageFile}')`)\n    }\n\n    const checkNotEmpty = (name: string, value: string | n) => {\n      if (isEmptyOrSpaces(value)) {\n        reportError(name)\n      }\n    }\n\n    const appMetadata = this.metadata\n\n    checkNotEmpty(\"name\", appMetadata.name)\n    checkNotEmpty(\"description\", appMetadata.description)\n    checkNotEmpty(\"version\", appMetadata.version)\n\n    checkDependencies(this.devMetadata.dependencies, errors)\n    if ((<any>appMetadata) !== this.devMetadata) {\n      checkDependencies(appMetadata.dependencies, errors)\n\n      if ((<any>appMetadata).build != null) {\n        errors.push(`'build' in the application package.json (${appPackageFile}) is not supported since 3.0 anymore. Please move 'build' into the development package.json (${devAppPackageFile})`)\n      }\n    }\n\n    const config = <any>this.config\n    if (config[\"osx-sign\"] != null) {\n      errors.push(\"osx-sign is deprecated and not supported — please see https://github.com/electron-userland/electron-builder/wiki/Code-Signing\")\n    }\n    if (config[\"osx\"] != null) {\n      errors.push(`osx is deprecated and not supported — please use mac instead`)\n    }\n    if (config[\"app-copyright\"] != null) {\n      errors.push(`app-copyright is deprecated and not supported — please use copyright instead`)\n    }\n    if (config[\"app-category-type\"] != null) {\n      errors.push(`app-category-type is deprecated and not supported — please use mac.category instead`)\n    }\n\n    const author = appMetadata.author\n    if (author == null) {\n      errors.push(`Please specify \"author\" in the application package.json ('${appPackageFile}') — it is used as company name and copyright owner.`)\n    }\n\n    if (config.name != null) {\n      errors.push(`'name' in the config is forbidden. Please move 'name' into the package.json (${appPackageFile})`)\n    }\n\n    if (config.prune != null) {\n      errors.push(\"prune is deprecated — development dependencies are never copied in any case\")\n    }\n\n    if (errors.length > 0) {\n      throw new Error(errors.join(\"\\n\"))\n    }\n  }\n\n  private async installAppDependencies(platform: Platform, arch: Arch): Promise<any> {\n    if (this.options.prepackaged != null) {\n      return\n    }\n\n    const options = this.config\n    if (options.nodeGypRebuild === true) {\n      log(`Executing node-gyp rebuild for arch ${Arch[arch]}`)\n      await exec(process.platform === \"win32\" ? \"node-gyp.cmd\" : \"node-gyp\", [\"rebuild\"], {\n        env: getGypEnv(this.electronVersion, platform.nodeName, Arch[arch], true),\n      })\n    }\n\n    if (options.npmRebuild === false) {\n      log(\"Skip app dependencies rebuild because npmRebuild is set to false\")\n      return\n    }\n\n    const beforeBuild = options.beforeBuild\n    if (beforeBuild != null) {\n      const performDependenciesInstallOrRebuild = await beforeBuild({\n        appDir: this.appDir,\n        electronVersion: this.electronVersion,\n        platform,\n        arch: Arch[arch]\n      })\n      if (!performDependenciesInstallOrRebuild) return\n    }\n\n    if (options.npmSkipBuildFromSource !== true && platform.nodeName !== process.platform) {\n      log(\"Skip app dependencies rebuild because platform is different\")\n    }\n    else {\n      await installOrRebuild(options, this.appDir, this.electronVersion, platform.nodeName, Arch[arch])\n    }\n  }\n\n  afterPack(context: AfterPackContext): Promise<void> {\n    const afterPack = this.config.afterPack\n    const handlers = this.afterPackHandlers.slice()\n    if (afterPack != null) {\n      // user handler should be last\n      handlers.push(afterPack)\n    }\n    return BluebirdPromise.each(handlers, it => it(context))\n  }\n}\n\nexport function normalizePlatforms(rawPlatforms: Array<string | Platform> | string | Platform | n): Array<Platform> {\n  const platforms = rawPlatforms == null || Array.isArray(rawPlatforms) ? (<Array<string | Platform | n>>rawPlatforms) : [rawPlatforms]\n  if (<any>platforms == null || platforms.length === 0) {\n    return [Platform.fromString(process.platform)]\n  }\n  else if (platforms[0] === \"all\") {\n    if (process.platform === Platform.MAC.nodeName) {\n      return [Platform.MAC, Platform.LINUX, Platform.WINDOWS]\n    }\n    else if (process.platform === Platform.LINUX.nodeName) {\n      // macOS code sign works only on macOS\n      return [Platform.LINUX, Platform.WINDOWS]\n    }\n    else {\n      return [Platform.WINDOWS]\n    }\n  }\n  else {\n    return platforms.map(it => it instanceof Platform ? it : Platform.fromString(it!))\n  }\n}\n\nfunction checkConflictingOptions(options: any) {\n  for (const name of [\"all\", \"out\", \"tmpdir\", \"version\", \"platform\", \"dir\", \"arch\", \"name\", \"extra-resource\"]) {\n    if (name in options) {\n      throw new Error(`Option ${name} is ignored, do not specify it.`)\n    }\n  }\n}\n\nexport async function checkWineVersion(checkPromise: Promise<string>) {\n  function wineError(prefix: string): string {\n    return `${prefix}, please see https://github.com/electron-userland/electron-builder/wiki/Multi-Platform-Build#${(process.platform === \"linux\" ? \"linux\" : \"macos\")}`\n  }\n\n  let wineVersion: string\n  try {\n    wineVersion = (await checkPromise).trim()\n  }\n  catch (e) {\n    if (e.code === \"ENOENT\") {\n      throw new Error(wineError(\"wine is required\"))\n    }\n    else {\n      throw new Error(`Cannot check wine version: ${e}`)\n    }\n  }\n\n  if (wineVersion.startsWith(\"wine-\")) {\n    wineVersion = wineVersion.substring(\"wine-\".length)\n  }\n\n  const spaceIndex = wineVersion.indexOf(\" \")\n  if (spaceIndex > 0) {\n    wineVersion = wineVersion.substring(0, spaceIndex)\n  }\n\n  const suffixIndex = wineVersion.indexOf(\"-\")\n  if (suffixIndex > 0) {\n    wineVersion = wineVersion.substring(0, suffixIndex)\n  }\n\n  if (wineVersion.split(\".\").length === 2) {\n    wineVersion += \".0\"\n  }\n\n  if (isVersionLessThan(wineVersion, \"1.8.0\")) {\n    throw new Error(wineError(`wine 1.8+ is required, but your version is ${wineVersion}`))\n  }\n}\n\nfunction checkDependencies(dependencies: { [key: string]: string } | null | undefined, errors: Array<string>) {\n  if (dependencies == null) {\n    return\n  }\n\n  for (const name of [\"electron\", \"electron-prebuilt\", \"electron-builder\"]) {\n    if (name in dependencies) {\n      errors.push(`Package \"${name}\" is only allowed in \"devDependencies\". `\n        + `Please remove it from the \"dependencies\" section in your package.json.`)\n    }\n  }\n}"
  ]
}
