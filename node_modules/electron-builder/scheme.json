{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
        "AppXOptions": {
            "description": "### `appx`\n\nPlease see [Windows AppX docs](https://msdn.microsoft.com/en-us/library/windows/apps/br211453.aspx).",
            "properties": {
                "backgroundColor": {
                    "description": "The background color of the app tile. Please see [Visual Elements](https://msdn.microsoft.com/en-us/library/windows/apps/br211471.aspx).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "displayName": {
                    "description": "A friendly name that can be displayed to users. Corresponds to [Properties.DisplayName](https://msdn.microsoft.com/en-us/library/windows/apps/br211432.aspx).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "identityName": {
                    "description": "Describes the contents of the package. The Name attribute is case-sensitive. Corresponds to [Identity.Name](https://msdn.microsoft.com/en-us/library/windows/apps/br211441.aspx).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "makeappxArgs": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "publisher": {
                    "description": "Describes the publisher information in a form `CN=your name exactly as in your cert`. The Publisher attribute must match the publisher subject information of the certificate used to sign a package.\nBy default will be extracted from code sign certificate.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "publisherDisplayName": {
                    "description": "A friendly name for the publisher that can be displayed to users. Corresponds to [Properties.PublisherDisplayName](https://msdn.microsoft.com/en-us/library/windows/apps/br211460.aspx).",
                    "type": [
                        "null",
                        "string"
                    ]
                }
            },
            "type": "object"
        },
        "AsarOptions": {
            "properties": {
                "dot": {
                    "type": "boolean"
                },
                "extraMetadata": {
                },
                "ordering": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "smartUnpack": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DebOptions": {
            "description": "### `deb` Debian Package Specific Options",
            "properties": {
                "afterInstall": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "afterRemove": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "asar": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AsarOptions"
                        },
                        {
                            "type": [
                                "null",
                                "boolean"
                            ]
                        }
                    ]
                },
                "asarUnpack": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "category": {
                    "description": "The [application category](https://specifications.freedesktop.org/menu-spec/latest/apa.html#main-category-registry).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "compression": {
                    "description": "The compression type, one of `gz`, `bzip2`, `xz`. Defaults to `xz`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "depends": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Package dependencies. Defaults to `[\"gconf2\", \"gconf-service\", \"libnotify4\", \"libappindicator1\", \"libxtst6\", \"libnss3\"]` for `deb`."
                },
                "description": {
                    "description": "As [description](#AppMetadata-description) from application package.json, but allows you to specify different for Linux.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "desktop": {
                    "anyOf": [
                        {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The [Desktop file](https://developer.gnome.org/integration-guide/stable/desktop-files.html.en) entries (name to value)."
                },
                "executableName": {
                    "description": "The executable name. Defaults to `productName`.\n\nCannot be specified per target, allowed only in the `linux`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "extraFiles": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "extraResources": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "fileAssociations": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FileAssociation"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FileAssociation"
                            },
                            "type": "array"
                        }
                    ]
                },
                "files": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "forceCodeSigning": {
                    "type": "boolean"
                },
                "fpm": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "icon": {
                    "description": "The path to icon set directory, relative to `build` (build resources directory). The icon filename must contain the size (e.g. 32x32.png) of the icon.\nBy default will be generated automatically based on the macOS icns file.",
                    "type": "string"
                },
                "maintainer": {
                    "description": "The maintainer. Defaults to [author](#AppMetadata-author).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "packageCategory": {
                    "description": "The [package category](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Section). Not applicable for AppImage.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "priority": {
                    "description": "The [Priority](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Priority) attribute.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "publish": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PublishConfiguration"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/PublishConfiguration"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "synopsis": {
                    "description": "The [short description](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Description).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "target": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Target package type: list of `AppImage`, `snap`, `deb`, `rpm`, `freebsd`, `pacman`, `p5p`, `apk`, `7z`, `zip`, `tar.xz`, `tar.lz`, `tar.gz`, `tar.bz2`, `dir`. Defaults to `AppImage`.\n\nThe most effective [xz](https://en.wikipedia.org/wiki/Xz) compression format used by default."
                },
                "vendor": {
                    "description": "The vendor. Defaults to [author](#AppMetadata-author).",
                    "type": [
                        "null",
                        "string"
                    ]
                }
            },
            "type": "object"
        },
        "DmgContent": {
            "properties": {
                "name": {
                    "description": "The name of the file within the DMG. Defaults to basename of `path`.",
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "file",
                        "link"
                    ],
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "DmgOptions": {
            "description": "### `dmg` macOS DMG Options",
            "properties": {
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "background": {
                    "description": "The path to background image (default: `build/background.tiff` or `build/background.png` if exists). The resolution of this file determines the resolution of the installer window.\nIf background is not specified, use `window.size`. Default locations expected background size to be 540x380.\n\nSee [DMG with Retina background support](http://stackoverflow.com/a/11204769/1910191).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "backgroundColor": {
                    "description": "The background color (accepts css colors). Defaults to `#ffffff` (white) if no background image.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "contents": {
                    "description": "The content — to customize icon locations.",
                    "items": {
                        "$ref": "#/definitions/DmgContent"
                    },
                    "type": "array"
                },
                "forceCodeSigning": {
                    "type": "boolean"
                },
                "format": {
                    "description": "The disk image format, one of `UDRW`, `UDRO`, `UDCO`, `UDZO`, `UDBZ`, `ULFO` (lzfse-compressed image (OS X 10.11+ only)). Defaults to `UDBZ` (bzip2-compressed image).",
                    "type": "string"
                },
                "icon": {
                    "description": "The path to DMG icon (volume icon), which will be shown when mounted. Defaults to application icon (`build/icon.icns`).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "iconSize": {
                    "description": "The size of all the icons inside the DMG. Defaults to 80.",
                    "type": [
                        "null",
                        "number"
                    ]
                },
                "iconTextSize": {
                    "description": "The size of all the icon texts inside the DMG. Defaults to 12.",
                    "type": [
                        "null",
                        "number"
                    ]
                },
                "title": {
                    "description": "The title of the produced DMG, which will be shown when mounted (volume name). Defaults to `${productName} ${version}`\n\nMacro `${productName}`, `${version}` and `${name}` are supported.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "window": {
                    "$ref": "#/definitions/DmgWindow",
                    "description": "The DMG windows position and size. See [dmg.window](#DmgWindow)."
                }
            },
            "type": "object"
        },
        "DmgWindow": {
            "description": "### `dmg.window` DMG Windows Position and Size",
            "properties": {
                "height": {
                    "description": "The height. Defaults to background image height or 380.",
                    "type": "number"
                },
                "width": {
                    "description": "The width. Defaults to background image width or 540.",
                    "type": "number"
                },
                "x": {
                    "description": "The X position relative to left of the screen. Defaults to 400.",
                    "type": "number"
                },
                "y": {
                    "description": "The Y position relative to top of the screen. Defaults to 100.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "FileAssociation": {
            "description": "### `fileAssociations` File Associations\n\nmacOS (corresponds to [CFBundleDocumentTypes](https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-101685)) and NSIS only. Array of option objects.\n\nOn Windows works only if [nsis.perMachine](https://github.com/electron-userland/electron-builder/wiki/Options#NsisOptions-perMachine) is set to `true`.",
            "properties": {
                "description": {
                    "description": "windows-only.* The description.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "ext": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "The extension (minus the leading period). e.g. `png`."
                },
                "icon": {
                    "description": "The path to icon (`.icns` for MacOS and `.ico` for Windows), relative to `build` (build resources directory). Defaults to `${firstExt}.icns`/`${firstExt}.ico` (if several extensions specified, first is used) or to application icon.",
                    "type": "string"
                },
                "isPackage": {
                    "description": "macOS-only* Whether the document is distributed as a bundle. If set to true, the bundle directory is treated as a file. Corresponds to `LSTypeIsPackage`.",
                    "type": "boolean"
                },
                "name": {
                    "description": "The name. e.g. `PNG`. Defaults to `ext`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "role": {
                    "description": "macOS-only* The app’s role with respect to the type. The value can be `Editor`, `Viewer`, `Shell`, or `None`. Defaults to `Editor`. Corresponds to `CFBundleTypeRole`.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "FilePattern": {
            "properties": {
                "filter": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LinuxBuildOptions": {
            "description": "### `linux` Linux Specific Options",
            "properties": {
                "afterInstall": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "afterRemove": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "asar": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AsarOptions"
                        },
                        {
                            "type": [
                                "null",
                                "boolean"
                            ]
                        }
                    ]
                },
                "asarUnpack": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "category": {
                    "description": "The [application category](https://specifications.freedesktop.org/menu-spec/latest/apa.html#main-category-registry).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "depends": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Package dependencies. Defaults to `[\"gconf2\", \"gconf-service\", \"libnotify4\", \"libappindicator1\", \"libxtst6\", \"libnss3\"]` for `deb`."
                },
                "description": {
                    "description": "As [description](#AppMetadata-description) from application package.json, but allows you to specify different for Linux.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "desktop": {
                    "anyOf": [
                        {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The [Desktop file](https://developer.gnome.org/integration-guide/stable/desktop-files.html.en) entries (name to value)."
                },
                "executableName": {
                    "description": "The executable name. Defaults to `productName`.\n\nCannot be specified per target, allowed only in the `linux`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "extraFiles": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "extraResources": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "fileAssociations": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FileAssociation"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FileAssociation"
                            },
                            "type": "array"
                        }
                    ]
                },
                "files": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "forceCodeSigning": {
                    "type": "boolean"
                },
                "fpm": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "icon": {
                    "description": "The path to icon set directory, relative to `build` (build resources directory). The icon filename must contain the size (e.g. 32x32.png) of the icon.\nBy default will be generated automatically based on the macOS icns file.",
                    "type": "string"
                },
                "maintainer": {
                    "description": "The maintainer. Defaults to [author](#AppMetadata-author).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "packageCategory": {
                    "description": "The [package category](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Section). Not applicable for AppImage.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "publish": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PublishConfiguration"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/PublishConfiguration"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "target": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Target package type: list of `AppImage`, `snap`, `deb`, `rpm`, `freebsd`, `pacman`, `p5p`, `apk`, `7z`, `zip`, `tar.xz`, `tar.lz`, `tar.gz`, `tar.bz2`, `dir`. Defaults to `AppImage`.\n\nThe most effective [xz](https://en.wikipedia.org/wiki/Xz) compression format used by default."
                },
                "vendor": {
                    "description": "The vendor. Defaults to [author](#AppMetadata-author).",
                    "type": [
                        "null",
                        "string"
                    ]
                }
            },
            "type": "object"
        },
        "MacOptions": {
            "description": "### `mac` macOS Specific Options",
            "properties": {
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "asar": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AsarOptions"
                        },
                        {
                            "type": [
                                "null",
                                "boolean"
                            ]
                        }
                    ]
                },
                "asarUnpack": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "bundleVersion": {
                    "description": "The `CFBundleVersion`. Do not use it unless [you need to](see (https://github.com/electron-userland/electron-builder/issues/565#issuecomment-230678643)).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "category": {
                    "description": "The application category type, as shown in the Finder via *View -> Arrange by Application Category* when viewing the Applications directory.\n\nFor example, `\"category\": \"public.app-category.developer-tools\"` will set the application category to *Developer Tools*.\n\nValid values are listed in [Apple's documentation](https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/LaunchServicesKeys.html#//apple_ref/doc/uid/TP40009250-SW8).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "entitlements": {
                    "description": "The path to entitlements file for signing the app. `build/entitlements.mac.plist` will be used if exists (it is a recommended way to set).\nMAS entitlements is specified in the [mas](#MasBuildOptions-entitlements).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "entitlementsInherit": {
                    "description": "The path to child entitlements which inherit the security settings for signing frameworks and bundles of a distribution. `build/entitlements.mac.inherit.plist` will be used if exists (it is a recommended way to set).\nOtherwise [default](https://github.com/electron-userland/electron-osx-sign/blob/master/default.entitlements.darwin.inherit.plist).\n\nThis option only applies when signing with `entitlements` provided.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "extendInfo": {
                    "description": "The extra entries for `Info.plist`."
                },
                "extraFiles": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "extraResources": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "fileAssociations": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FileAssociation"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FileAssociation"
                            },
                            "type": "array"
                        }
                    ]
                },
                "files": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "forceCodeSigning": {
                    "type": "boolean"
                },
                "helperBundleId": {
                    "description": "The bundle identifier to use in the application helper's plist. Defaults to `${appBundleIdentifier}.helper`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "icon": {
                    "description": "The path to application icon. Defaults to `build/icon.icns` (consider using this convention instead of complicating your configuration).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "identity": {
                    "description": "The name of certificate to use when signing. Consider using environment variables [CSC_LINK or CSC_NAME](https://github.com/electron-userland/electron-builder/wiki/Code-Signing) instead of specifying this option.\nMAS installer identity is specified in the [mas](#MasBuildOptions-identity).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "publish": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PublishConfiguration"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/PublishConfiguration"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "target": {
                    "anyOf": [
                        {
                            "items": {
                                "enum": [
                                    "7z",
                                    "default",
                                    "dir",
                                    "dmg",
                                    "mas",
                                    "pkg",
                                    "tar.bz2",
                                    "tar.gz",
                                    "tar.lz",
                                    "tar.xz",
                                    "zip"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The target package type: list of `default`, `dmg`, `mas`, `pkg`, `7z`, `zip`, `tar.xz`, `tar.lz`, `tar.gz`, `tar.bz2`, `dir`. Defaults to `default` (dmg and zip for Squirrel.Mac)."
                },
                "type": {
                    "anyOf": [
                        {
                            "enum": [
                                "development",
                                "distribution"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Whether to sign app for development or for distribution. One of `development`, `distribution`. Defaults to `distribution`."
                }
            },
            "type": "object"
        },
        "MasBuildOptions": {
            "description": "### `mas` MAS (Mac Application Store) Specific Options",
            "properties": {
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "asar": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AsarOptions"
                        },
                        {
                            "type": [
                                "null",
                                "boolean"
                            ]
                        }
                    ]
                },
                "asarUnpack": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "bundleVersion": {
                    "description": "The `CFBundleVersion`. Do not use it unless [you need to](see (https://github.com/electron-userland/electron-builder/issues/565#issuecomment-230678643)).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "category": {
                    "description": "The application category type, as shown in the Finder via *View -> Arrange by Application Category* when viewing the Applications directory.\n\nFor example, `\"category\": \"public.app-category.developer-tools\"` will set the application category to *Developer Tools*.\n\nValid values are listed in [Apple's documentation](https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/LaunchServicesKeys.html#//apple_ref/doc/uid/TP40009250-SW8).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "entitlements": {
                    "description": "The path to entitlements file for signing the app. `build/entitlements.mas.plist` will be used if exists (it is a recommended way to set).\nOtherwise [default](https://github.com/electron-userland/electron-osx-sign/blob/master/default.entitlements.mas.plist).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "entitlementsInherit": {
                    "description": "The path to child entitlements which inherit the security settings for signing frameworks and bundles of a distribution. `build/entitlements.mas.inherit.plist` will be used if exists (it is a recommended way to set).\nOtherwise [default](https://github.com/electron-userland/electron-osx-sign/blob/master/default.entitlements.mas.inherit.plist).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "extendInfo": {
                    "description": "The extra entries for `Info.plist`."
                },
                "extraFiles": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "extraResources": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "fileAssociations": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FileAssociation"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FileAssociation"
                            },
                            "type": "array"
                        }
                    ]
                },
                "files": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "forceCodeSigning": {
                    "type": "boolean"
                },
                "helperBundleId": {
                    "description": "The bundle identifier to use in the application helper's plist. Defaults to `${appBundleIdentifier}.helper`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "icon": {
                    "description": "The path to application icon. Defaults to `build/icon.icns` (consider using this convention instead of complicating your configuration).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "identity": {
                    "description": "The name of certificate to use when signing. Consider using environment variables [CSC_LINK or CSC_NAME](https://github.com/electron-userland/electron-builder/wiki/Code-Signing) instead of specifying this option.\nMAS installer identity is specified in the [mas](#MasBuildOptions-identity).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "publish": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PublishConfiguration"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/PublishConfiguration"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "target": {
                    "anyOf": [
                        {
                            "items": {
                                "enum": [
                                    "7z",
                                    "default",
                                    "dir",
                                    "dmg",
                                    "mas",
                                    "pkg",
                                    "tar.bz2",
                                    "tar.gz",
                                    "tar.lz",
                                    "tar.xz",
                                    "zip"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The target package type: list of `default`, `dmg`, `mas`, `pkg`, `7z`, `zip`, `tar.xz`, `tar.lz`, `tar.gz`, `tar.bz2`, `dir`. Defaults to `default` (dmg and zip for Squirrel.Mac)."
                },
                "type": {
                    "anyOf": [
                        {
                            "enum": [
                                "development",
                                "distribution"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Whether to sign app for development or for distribution. One of `development`, `distribution`. Defaults to `distribution`."
                }
            },
            "type": "object"
        },
        "MetadataDirectories": {
            "description": "### `directories`",
            "properties": {
                "app": {
                    "description": "The application directory (containing the application package.json), defaults to `app`, `www` or working directory.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "buildResources": {
                    "description": "The path to build resources, defaults to `build`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "output": {
                    "description": "The output directory, defaults to `dist`.",
                    "type": [
                        "null",
                        "string"
                    ]
                }
            },
            "type": "object"
        },
        "NsisOptions": {
            "description": "### `nsis`\n\nSee [NSIS target notes](https://github.com/electron-userland/electron-builder/wiki/NSIS).",
            "properties": {
                "allowElevation": {
                    "description": "boring installer only.* Allow requesting for elevation. If false, user will have to restart installer with elevated permissions. Defaults to `true`.",
                    "type": "boolean"
                },
                "allowToChangeInstallationDirectory": {
                    "description": "boring installer only.* Whether to allow user to change installation directory. Defaults to `false`.",
                    "type": "boolean"
                },
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern). Defaults to `${productName} Setup ${version}.${ext}`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "deleteAppDataOnUninstall": {
                    "description": "one-click installer only.* Whether to delete app data on uninstall. Defaults to `false`.",
                    "type": "boolean"
                },
                "guid": {
                    "description": "See [GUID vs Application Name](https://github.com/electron-userland/electron-builder/wiki/NSIS#guid-vs-application-name).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "include": {
                    "description": "The path to NSIS include script to customize installer. Defaults to `build/installer.nsh`. See [Custom NSIS script](https://github.com/electron-userland/electron-builder/wiki/NSIS#custom-nsis-script).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "installerHeader": {
                    "description": "boring installer only.* `MUI_HEADERIMAGE`, relative to the project directory. Defaults to `build/installerHeader.bmp`",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "installerHeaderIcon": {
                    "description": "one-click installer only.* The path to header icon (above the progress bar), relative to the project directory. Defaults to `build/installerHeaderIcon.ico` or application icon.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "installerIcon": {
                    "description": "The path to installer icon. Defaults to `build/installerIcon.ico` or application icon.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "installerSidebar": {
                    "description": "boring installer only.* `MUI_WELCOMEFINISHPAGE_BITMAP`, relative to the project directory. Defaults to `build/installerSidebar.bmp` or `${NSISDIR}\\\\Contrib\\\\Graphics\\\\Wizard\\\\nsis3-metro.bmp`",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "language": {
                    "description": "[LCID Dec](https://msdn.microsoft.com/en-au/goglobal/bb964664.aspx), defaults to `1033`(`English - United States`).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "license": {
                    "description": "The path to EULA license file. Defaults to `build/license.rtf` or `build/license.txt`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "menuCategory": {
                    "description": "Whether to create submenu for start menu shortcut and program files directory. Defaults to `false`. If `true`, company name will be used. Or string value.",
                    "type": [
                        "string",
                        "boolean"
                    ]
                },
                "multiLanguageInstaller": {
                    "description": "boring installer only.* Whether to create multi-language installer. Defaults to `unicode` option value.\n[Not all strings are translated](https://github.com/electron-userland/electron-builder/issues/646#issuecomment-238155800).",
                    "type": "boolean"
                },
                "oneClick": {
                    "description": "One-click installation. Defaults to `true`.",
                    "type": "boolean"
                },
                "perMachine": {
                    "description": "Defaults to `false`.\n\nIf `oneClick` is `true` (default): Install per all users (per-machine).\n\nIf `oneClick` is `false`: no install mode installer page (choice per-machine or per-user), always install per-machine.",
                    "type": "boolean"
                },
                "runAfterFinish": {
                    "description": "one-click installer only.* Run application after finish. Defaults to `true`.",
                    "type": "boolean"
                },
                "script": {
                    "description": "The path to NSIS script to customize installer. Defaults to `build/installer.nsi`. See [Custom NSIS script](https://github.com/electron-userland/electron-builder/wiki/NSIS#custom-nsis-script).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "unicode": {
                    "description": "Whether to create [Unicode installer](http://nsis.sourceforge.net/Docs/Chapter1.html#intro-unicode). Defaults to `true`.",
                    "type": "boolean"
                },
                "uninstallerSidebar": {
                    "description": "boring installer only.* `MUI_UNWELCOMEFINISHPAGE_BITMAP`, relative to the project directory. Defaults to `installerSidebar` option or `build/uninstallerSidebar.bmp` or `build/installerSidebar.bmp` or `${NSISDIR}\\\\Contrib\\\\Graphics\\\\Wizard\\\\nsis3-metro.bmp`",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "useZip": {
                    "type": "boolean"
                },
                "warningsAsErrors": {
                    "description": "Defaults to `true`. If `warningsAsErrors` is `true` (default): NSIS will treat warnings as errors. If `warningsAsErrors` is `false`: NSIS will allow warnings.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PkgOptions": {
            "description": "### `pkg` macOS Product Archive Options",
            "properties": {
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "forceCodeSigning": {
                    "type": "boolean"
                },
                "identity": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "installLocation": {
                    "description": "The install location. Defaults to `/Applications`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "productbuild": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "scripts": {
                    "description": "The scripts directory, relative to `build` (build resources directory). Defaults to `build/pkg-scripts`.\nSee [Scripting in installer packages](http://macinstallers.blogspot.de/2012/07/scripting-in-installer-packages.html).\nThe scripts can be in any language so long as the files are marked executable and have the appropriate shebang indicating the path to the interpreter.\n\nScripts are required to be executable (`chmod +x file`).",
                    "type": [
                        "null",
                        "string"
                    ]
                }
            },
            "type": "object"
        },
        "Protocol": {
            "description": "### `protocols` URL Protocol Schemes\n\nProtocols to associate the app with. macOS only.\n\nPlease note — on macOS [you need to register an `open-url` event handler](http://electron.atom.io/docs/api/app/#event-open-url-macos).",
            "properties": {
                "name": {
                    "description": "The name. e.g. `IRC server URL`.",
                    "type": "string"
                },
                "role": {
                    "description": "macOS-only* The app’s role with respect to the type. The value can be `Editor`, `Viewer`, `Shell`, or `None`. Defaults to `Editor`.",
                    "type": "string"
                },
                "schemes": {
                    "description": "The schemes. e.g. `[\"irc\", \"ircs\"]`.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PublishConfiguration": {
            "description": "### `publish`\n\nCan be specified in the [config](https://github.com/electron-userland/electron-builder/wiki/Options#configuration-options) or any platform- or target- specific options.\n\nIf `GH_TOKEN` is set — defaults to `[{provider: \"github\"}]`.\nIf `BT_TOKEN` is set and `GH_TOKEN` is not set — defaults to `[{provider: \"bintray\"}]`.\nIf `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` are set and neither `GH_TOKEN` and `BT_TOKEN` are set — defaults to `[{provider: \"s3\"}]`.\n\nArray of option objects. Order is important — first item will be used as a default auto-update server on Windows (NSIS).\n\nAmazon S3 — `https` must be used, so, if you use direct Amazon S3 endpoints, format `https://s3.amazonaws.com/bucket_name` [must be used](http://stackoverflow.com/a/11203685/1910191). And do not forget to make files/directories public.",
            "properties": {
                "owner": {
                    "description": "The owner.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "provider": {
                    "$ref": "#/definitions/PublishProvider",
                    "description": "The provider, one of `github`, `s3`, `bintray`, `generic`."
                },
                "token": {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            },
            "type": "object"
        },
        "PublishProvider": {
            "enum": [
                "bintray",
                "generic",
                "github",
                "s3"
            ],
            "type": "string"
        },
        "SnapOptions": {
            "description": "### `snap` [Snap](http://snapcraft.io) Specific Options",
            "properties": {
                "afterInstall": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "afterRemove": {
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "asar": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AsarOptions"
                        },
                        {
                            "type": [
                                "null",
                                "boolean"
                            ]
                        }
                    ]
                },
                "asarUnpack": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "assumes": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The list of features that must be supported by the core in order for this snap to install."
                },
                "category": {
                    "description": "The [application category](https://specifications.freedesktop.org/menu-spec/latest/apa.html#main-category-registry).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "confinement": {
                    "anyOf": [
                        {
                            "enum": [
                                "devmode",
                                "strict"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The type of confinement supported by the snap. Can be either `devmode` (i.e. this snap doesn’t support running under confinement) or `strict` (i.e. full confinement supported via interfaces). Defaults to `strict`."
                },
                "depends": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Package dependencies. Defaults to `[\"gconf2\", \"gconf-service\", \"libnotify4\", \"libappindicator1\", \"libxtst6\", \"libnss3\"]` for `deb`."
                },
                "description": {
                    "description": "As [description](#AppMetadata-description) from application package.json, but allows you to specify different for Linux.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "desktop": {
                    "anyOf": [
                        {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The [Desktop file](https://developer.gnome.org/integration-guide/stable/desktop-files.html.en) entries (name to value)."
                },
                "executableName": {
                    "description": "The executable name. Defaults to `productName`.\n\nCannot be specified per target, allowed only in the `linux`.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "extraFiles": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "extraResources": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "fileAssociations": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FileAssociation"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FileAssociation"
                            },
                            "type": "array"
                        }
                    ]
                },
                "files": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "forceCodeSigning": {
                    "type": "boolean"
                },
                "fpm": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "grade": {
                    "anyOf": [
                        {
                            "enum": [
                                "devel",
                                "stable"
                            ],
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The quality grade of the snap. It can be either `devel` (i.e. a development version of the snap, so not to be published to the “stable” or “candidate” channels) or “stable” (i.e. a stable release or release candidate, which can be released to all channels).\nDefaults to `stable`."
                },
                "icon": {
                    "description": "The path to icon set directory, relative to `build` (build resources directory). The icon filename must contain the size (e.g. 32x32.png) of the icon.\nBy default will be generated automatically based on the macOS icns file.",
                    "type": "string"
                },
                "maintainer": {
                    "description": "The maintainer. Defaults to [author](#AppMetadata-author).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "packageCategory": {
                    "description": "The [package category](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Section). Not applicable for AppImage.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "plugs": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The list of [plugs](https://snapcraft.io/docs/reference/interfaces).\nDefaults to `[\"home\", \"x11\", \"unity7\", \"browser-support\", \"network\", \"gsettings\", \"pulseaudio\", \"opengl\"]`.\n\nIf list contains `default`, it will be replaced to default list, so, `[\"default\", \"foo\"]` can be used to add custom plug `foo` in addition to defaults."
                },
                "publish": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PublishConfiguration"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/PublishConfiguration"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "stagePackages": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The list of Ubuntu packages to use that are needed to support the `app` part creation. Like `depends` for `deb`.\nDefaults to `[\"libnotify4\", \"libappindicator1\", \"libxtst6\", \"libnss3\", \"libxss1\", \"fontconfig-config\", \"gconf2\", \"libasound2\", \"pulseaudio\"]`.\n\nIf list contains `default`, it will be replaced to default list, so, `[\"default\", \"foo\"]` can be used to add custom package `foo` in addition to defaults."
                },
                "summary": {
                    "description": "The 78 character long summary. Defaults to [productName](#AppMetadata-productName).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "target": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Target package type: list of `AppImage`, `snap`, `deb`, `rpm`, `freebsd`, `pacman`, `p5p`, `apk`, `7z`, `zip`, `tar.xz`, `tar.lz`, `tar.gz`, `tar.bz2`, `dir`. Defaults to `AppImage`.\n\nThe most effective [xz](https://en.wikipedia.org/wiki/Xz) compression format used by default."
                },
                "ubuntuAppPlatformContent": {
                    "description": "Specify `ubuntu-app-platform1` to use [ubuntu-app-platform](https://insights.ubuntu.com/2016/11/17/how-to-create-snap-packages-on-qt-applications/).\nSnap size will be greatly reduced, but it is not recommended for now because \"the snaps must be connected before running uitk-gallery for the first time\".",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "vendor": {
                    "description": "The vendor. Defaults to [author](#AppMetadata-author).",
                    "type": [
                        "null",
                        "string"
                    ]
                }
            },
            "type": "object"
        },
        "SquirrelWindowsOptions": {
            "description": "### `squirrelWindows`\n\nTo use Squirrel.Windows please install `electron-builder-squirrel-windows` dependency. Squirrel.Windows target is maintained, but deprecated. Please use `nsis` instead.",
            "properties": {
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "asar": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AsarOptions"
                        },
                        {
                            "type": [
                                "null",
                                "boolean"
                            ]
                        }
                    ]
                },
                "asarUnpack": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "certificateFile": {
                    "description": "The path to the *.pfx certificate you want to sign with. Please use it only if you cannot use env variable `CSC_LINK` (`WIN_CSC_LINK`) for some reason.\nPlease see [Code Signing](https://github.com/electron-userland/electron-builder/wiki/Code-Signing).",
                    "type": "string"
                },
                "certificatePassword": {
                    "description": "The password to the certificate provided in `certificateFile`. Please use it only if you cannot use env variable `CSC_KEY_PASSWORD` (`WIN_CSC_KEY_PASSWORD`) for some reason.\nPlease see [Code Signing](https://github.com/electron-userland/electron-builder/wiki/Code-Signing).",
                    "type": "string"
                },
                "certificateSubjectName": {
                    "description": "The name of the subject of the signing certificate. Required only for EV Code Signing and works only on Windows.",
                    "type": "string"
                },
                "extraFiles": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "extraResources": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "fileAssociations": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FileAssociation"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FileAssociation"
                            },
                            "type": "array"
                        }
                    ]
                },
                "files": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "forceCodeSigning": {
                    "type": "boolean"
                },
                "icon": {
                    "description": "The path to application icon. Defaults to `build/icon.ico` (consider using this convention instead of complicating your configuration).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "iconUrl": {
                    "description": "A URL to an ICO file to use as the application icon (displayed in Control Panel > Programs and Features). Defaults to the Electron icon.\n\nPlease note — [local icon file url is not accepted](https://github.com/atom/grunt-electron-installer/issues/73), must be https/http.\n\n If you don't plan to build windows installer, you can omit it.\n If your project repository is public on GitHub, it will be `https://github.com/${u}/${p}/blob/master/build/icon.ico?raw=true` by default.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "legalTrademarks": {
                    "description": "The trademarks and registered trademarks.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "loadingGif": {
                    "description": "The path to a .gif file to display during install. `build/install-spinner.gif` will be used if exists (it is a recommended way to set)\n(otherwise [default](https://github.com/electron/windows-installer/blob/master/resources/install-spinner.gif)).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "msi": {
                    "description": "Whether to create an MSI installer. Defaults to `false` (MSI is not created).",
                    "type": "boolean"
                },
                "publish": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PublishConfiguration"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/PublishConfiguration"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "publisherName": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ],
                    "description": "[The publisher name](https://github.com/electron-userland/electron-builder/issues/1187#issuecomment-278972073), exactly as in your code signed certificate. Several names can be provided.\nDefaults to common name from your code signing certificate."
                },
                "remoteReleases": {
                    "description": "A URL to your existing updates. Or `true` to automatically set to your GitHub repository. If given, these will be downloaded to create delta updates.",
                    "type": [
                        "null",
                        "string",
                        "boolean"
                    ]
                },
                "remoteToken": {
                    "description": "Authentication token for remote updates",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "rfc3161TimeStampServer": {
                    "description": "The URL of the RFC 3161 time stamp server. Defaults to `http://timestamp.comodoca.com/rfc3161`.",
                    "type": "string"
                },
                "signingHashAlgorithms": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Array of signing algorithms used. Defaults to `['sha1', 'sha256']`\n\nFor AppX `sha256` is always used."
                },
                "target": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Target package type: list of `nsis`, `nsis-web` (Web installer), `appx`, `squirrel`, `7z`, `zip`, `tar.xz`, `tar.lz`, `tar.gz`, `tar.bz2`, `dir`. Defaults to `nsis`.\n\nAppX package can be built only on Windows 10.\n\nTo use Squirrel.Windows please install `electron-builder-squirrel-windows` dependency."
                },
                "timeStampServer": {
                    "description": "The URL of the time stamp server. Defaults to `http://timestamp.verisign.com/scripts/timstamp.dll`.",
                    "type": "string"
                },
                "useAppIdAsId": {
                    "description": "Use `appId` to identify package instead of `name`.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "WinBuildOptions": {
            "description": "### `win` Windows Specific Options",
            "properties": {
                "artifactName": {
                    "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "asar": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/AsarOptions"
                        },
                        {
                            "type": [
                                "null",
                                "boolean"
                            ]
                        }
                    ]
                },
                "asarUnpack": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "certificateFile": {
                    "description": "The path to the *.pfx certificate you want to sign with. Please use it only if you cannot use env variable `CSC_LINK` (`WIN_CSC_LINK`) for some reason.\nPlease see [Code Signing](https://github.com/electron-userland/electron-builder/wiki/Code-Signing).",
                    "type": "string"
                },
                "certificatePassword": {
                    "description": "The password to the certificate provided in `certificateFile`. Please use it only if you cannot use env variable `CSC_KEY_PASSWORD` (`WIN_CSC_KEY_PASSWORD`) for some reason.\nPlease see [Code Signing](https://github.com/electron-userland/electron-builder/wiki/Code-Signing).",
                    "type": "string"
                },
                "certificateSubjectName": {
                    "description": "The name of the subject of the signing certificate. Required only for EV Code Signing and works only on Windows.",
                    "type": "string"
                },
                "extraFiles": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "extraResources": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/FilePattern"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FilePattern"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "fileAssociations": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/FileAssociation"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/FileAssociation"
                            },
                            "type": "array"
                        }
                    ]
                },
                "files": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "forceCodeSigning": {
                    "type": "boolean"
                },
                "icon": {
                    "description": "The path to application icon. Defaults to `build/icon.ico` (consider using this convention instead of complicating your configuration).",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "legalTrademarks": {
                    "description": "The trademarks and registered trademarks.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "publish": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "$ref": "#/definitions/PublishConfiguration"
                        },
                        {
                            "items": {
                                "$ref": "#/definitions/PublishConfiguration"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ]
                },
                "publisherName": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    ],
                    "description": "[The publisher name](https://github.com/electron-userland/electron-builder/issues/1187#issuecomment-278972073), exactly as in your code signed certificate. Several names can be provided.\nDefaults to common name from your code signing certificate."
                },
                "rfc3161TimeStampServer": {
                    "description": "The URL of the RFC 3161 time stamp server. Defaults to `http://timestamp.comodoca.com/rfc3161`.",
                    "type": "string"
                },
                "signingHashAlgorithms": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Array of signing algorithms used. Defaults to `['sha1', 'sha256']`\n\nFor AppX `sha256` is always used."
                },
                "target": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Target package type: list of `nsis`, `nsis-web` (Web installer), `appx`, `squirrel`, `7z`, `zip`, `tar.xz`, `tar.lz`, `tar.gz`, `tar.bz2`, `dir`. Defaults to `nsis`.\n\nAppX package can be built only on Windows 10.\n\nTo use Squirrel.Windows please install `electron-builder-squirrel-windows` dependency."
                },
                "timeStampServer": {
                    "description": "The URL of the time stamp server. Defaults to `http://timestamp.verisign.com/scripts/timstamp.dll`.",
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "description": "## Configuration Options",
    "properties": {
        "afterPack": {
            "description": "programmatic API only* The function to be run after pack (but before pack into distributable format and sign). Promise must be returned.",
            "properties": {
            },
            "type": "object"
        },
        "appId": {
            "description": "The application id. Used as\n[CFBundleIdentifier](https://developer.apple.com/library/ios/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html#//apple_ref/doc/uid/20001431-102070) for MacOS and as\n[Application User Model ID](https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx) for Windows (NSIS target only, Squirrel.Windows not supported).\n\nDefaults to `com.electron.${name}`. It is strongly recommended that an explicit ID be set.",
            "type": [
                "null",
                "string"
            ]
        },
        "appx": {
            "anyOf": [
                {
                    "$ref": "#/definitions/AppXOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "artifactName": {
            "description": "The [artifact file name pattern](https://github.com/electron-userland/electron-builder/wiki/Options#artifact-file-name-pattern). Defaults to `${productName}-${version}.${ext}` (some target can have another defaults, see corresponding options).\n\nCurrently supported only for `pkg`, `dmg` and `nsis`.",
            "type": [
                "null",
                "string"
            ]
        },
        "asar": {
            "anyOf": [
                {
                    "$ref": "#/definitions/AsarOptions"
                },
                {
                    "type": [
                        "null",
                        "boolean"
                    ]
                }
            ],
            "description": "Whether to package the application's source code into an archive, using [Electron's archive format](http://electron.atom.io/docs/tutorial/application-packaging/). Defaults to `true`.\nNode modules, that must be unpacked, will be detected automatically, you don't need to explicitly set [asarUnpack](#Config-asarUnpack) - please file issue if this doesn't work."
        },
        "asarUnpack": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            ],
            "description": "A [glob patterns](https://www.npmjs.com/package/glob#glob-primer) relative to the [app directory](#MetadataDirectories-app), which specifies which files to unpack when creating the [asar](http://electron.atom.io/docs/tutorial/application-packaging/) archive."
        },
        "beforeBuild": {
            "description": "programmatic API only* The function to be run before dependencies are installed or rebuilt. Works when `npmRebuild` is set to `true`. Promise must be returned. Resolving to `false` will skip dependencies install or rebuild.",
            "properties": {
            },
            "type": "object"
        },
        "compression": {
            "anyOf": [
                {
                    "enum": [
                        "maximum",
                        "normal",
                        "store"
                    ],
                    "type": "string"
                },
                {
                    "type": "null"
                }
            ],
            "description": "The compression level, one of `store`, `normal`, `maximum` (default: `normal`). If you want to rapidly test build, `store` can reduce build time significantly."
        },
        "copyright": {
            "description": "The human-readable copyright line for the app. Defaults to `Copyright © year author`.",
            "type": [
                "null",
                "string"
            ]
        },
        "deb": {
            "anyOf": [
                {
                    "$ref": "#/definitions/DebOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "directories": {
            "anyOf": [
                {
                    "$ref": "#/definitions/MetadataDirectories"
                },
                {
                    "type": "null"
                }
            ]
        },
        "dmg": {
            "anyOf": [
                {
                    "$ref": "#/definitions/DmgOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "electronDist": {
            "description": "The path to custom Electron build (e.g. `~/electron/out/R`). Only macOS supported, file issue if need for Linux or Windows.",
            "type": "string"
        },
        "electronDownload": {
            "description": "The [electron-download](https://github.com/electron-userland/electron-download#usage) options."
        },
        "electronVersion": {
            "description": "The version of electron you are packaging for. Defaults to version of `electron`, `electron-prebuilt` or `electron-prebuilt-compile` dependency.",
            "type": [
                "null",
                "string"
            ]
        },
        "extraFiles": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "$ref": "#/definitions/FilePattern"
                },
                {
                    "items": {
                        "$ref": "#/definitions/FilePattern"
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            ],
            "description": "The same as [extraResources](#Config-extraResources) but copy into the app's content directory (`Contents` for MacOS, root directory for Linux/Windows)."
        },
        "extraResources": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "$ref": "#/definitions/FilePattern"
                },
                {
                    "items": {
                        "$ref": "#/definitions/FilePattern"
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            ],
            "description": "A [glob patterns](https://www.npmjs.com/package/glob#glob-primer) relative to the project directory, when specified, copy the file or directory with matching names directly into the app's resources directory (`Contents/Resources` for MacOS, `resources` for Linux/Windows).\n\nGlob rules the same as for [files](#multiple-glob-patterns)."
        },
        "fileAssociations": {
            "anyOf": [
                {
                    "$ref": "#/definitions/FileAssociation"
                },
                {
                    "items": {
                        "$ref": "#/definitions/FileAssociation"
                    },
                    "type": "array"
                }
            ]
        },
        "files": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            ],
            "description": "A [glob patterns](https://www.npmjs.com/package/glob#glob-primer) relative to the [app directory](#MetadataDirectories-app), which specifies which files to include when copying files to create the package.\n\nSee [File Patterns](#multiple-glob-patterns)."
        },
        "forceCodeSigning": {
            "description": "Whether to fail if application will be not signed (to prevent unsigned app if code signing configuration is not correct).",
            "type": "boolean"
        },
        "icon": {
            "type": [
                "null",
                "string"
            ]
        },
        "iconUrl": {
            "type": [
                "null",
                "string"
            ]
        },
        "linux": {
            "anyOf": [
                {
                    "$ref": "#/definitions/LinuxBuildOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "mac": {
            "anyOf": [
                {
                    "$ref": "#/definitions/MacOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "mas": {
            "anyOf": [
                {
                    "$ref": "#/definitions/MasBuildOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "nodeGypRebuild": {
            "description": "Whether to execute `node-gyp rebuild` before starting to package the app. Defaults to `false`.",
            "type": "boolean"
        },
        "npmArgs": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            ],
            "description": "Additional command line arguments to use when installing app native deps. Defaults to `null`."
        },
        "npmRebuild": {
            "description": "Whether to [rebuild](https://docs.npmjs.com/cli/rebuild) native dependencies (`npm rebuild`) before starting to package the app. Defaults to `true`.",
            "type": "boolean"
        },
        "npmSkipBuildFromSource": {
            "description": "Whether to omit using [--build-from-source](https://github.com/mapbox/node-pre-gyp#options) flag when installing app native deps. Defaults to `false`.",
            "type": "boolean"
        },
        "nsis": {
            "anyOf": [
                {
                    "$ref": "#/definitions/NsisOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "pkg": {
            "anyOf": [
                {
                    "$ref": "#/definitions/PkgOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "productName": {
            "description": "See [AppMetadata.productName](#AppMetadata-productName).",
            "type": [
                "null",
                "string"
            ]
        },
        "protocols": {
            "anyOf": [
                {
                    "$ref": "#/definitions/Protocol"
                },
                {
                    "items": {
                        "$ref": "#/definitions/Protocol"
                    },
                    "type": "array"
                }
            ]
        },
        "publish": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "$ref": "#/definitions/PublishConfiguration"
                },
                {
                    "items": {
                        "$ref": "#/definitions/PublishConfiguration"
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            ],
            "description": "See [publish](https://github.com/electron-userland/electron-builder/wiki/Publishing-Artifacts#PublishConfiguration)."
        },
        "snap": {
            "anyOf": [
                {
                    "$ref": "#/definitions/SnapOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "squirrelWindows": {
            "anyOf": [
                {
                    "$ref": "#/definitions/SquirrelWindowsOptions"
                },
                {
                    "type": "null"
                }
            ]
        },
        "target": {
            "anyOf": [
                {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                {
                    "type": [
                        "null",
                        "string"
                    ]
                }
            ]
        },
        "win": {
            "anyOf": [
                {
                    "$ref": "#/definitions/WinBuildOptions"
                },
                {
                    "type": "null"
                }
            ]
        }
    },
    "type": "object"
}

