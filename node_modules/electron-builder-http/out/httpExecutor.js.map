{
  "version": 3,
  "file": "httpExecutor.js",
  "sourceRoot": "",
  "sources": [
    "../src/httpExecutor.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import { createHash } from \"crypto\"\nimport { Transform } from \"stream\"\nimport { createWriteStream } from \"fs-extra-p\"\nimport { RequestOptions } from \"http\"\nimport { parse as parseUrl } from \"url\"\nimport _debug from \"debug\"\nimport { ProgressCallbackTransform, ProgressInfo } from \"./ProgressCallbackTransform\"\nimport { safeLoad } from \"js-yaml\"\nimport { EventEmitter } from \"events\"\nimport { Socket } from \"net\"\nimport { CancellationToken } from \"./CancellationToken\"\n\nexport interface RequestHeaders {\n  [key: string]: any\n}\n\nexport interface Response extends EventEmitter {\n  statusCode?: number\n  statusMessage?: string\n\n  headers: any\n\n  setEncoding(encoding: string): void\n}\n\nexport interface DownloadOptions {\n  readonly headers?: RequestHeaders | null\n  readonly skipDirCreation?: boolean\n  readonly sha2?: string | null\n\n  readonly cancellationToken: CancellationToken\n\n  onProgress?(progress: ProgressInfo): void\n}\n\nexport class HttpExecutorHolder {\n  private _httpExecutor: HttpExecutor<any, any>\n\n  get httpExecutor(): HttpExecutor<any, any> {\n    if (this._httpExecutor == null) {\n      this._httpExecutor = new (require(\"electron-builder-util/out/nodeHttpExecutor\").NodeHttpExecutor)()\n    }\n    return this._httpExecutor\n  }\n\n  set httpExecutor(value: HttpExecutor<any, any>) {\n    this._httpExecutor = value\n  }\n}\n\nexport const executorHolder = new HttpExecutorHolder()\n\nexport function download(url: string, destination: string, options?: DownloadOptions | null): Promise<string> {\n  return executorHolder.httpExecutor.download(url, destination, options)\n}\n\nexport class HttpError extends Error {\n  constructor(public readonly response: {statusMessage?: string | undefined, statusCode?: number | undefined, headers?: { [key: string]: string[]; } | undefined}, public description: any | null = null) {\n    super(response.statusCode + \" \" + response.statusMessage + (description == null ? \"\" : (\"\\n\" + JSON.stringify(description, null, \"  \"))) + \"\\nHeaders: \" + JSON.stringify(response.headers, null, \"  \"))\n\n    this.name = \"HttpError\"\n  }\n}\n\nexport abstract class HttpExecutor<REQUEST_OPTS, REQUEST> {\n  protected readonly maxRedirects = 10\n  protected readonly debug = _debug(\"electron-builder\")\n\n  request<T>(options: RequestOptions, cancellationToken: CancellationToken, data?: { [name: string]: any; } | null): Promise<T> {\n    configureRequestOptions(options)\n    const encodedData = data == null ? undefined : new Buffer(JSON.stringify(data))\n    if (encodedData != null) {\n      options.method = \"post\"\n      options.headers![\"Content-Type\"] = \"application/json\"\n      options.headers![\"Content-Length\"] = encodedData.length\n    }\n    return this.doApiRequest<T>(<REQUEST_OPTS>options, cancellationToken, it => (<any>it).end(encodedData), 0)\n  }\n\n  protected abstract doApiRequest<T>(options: REQUEST_OPTS, cancellationToken: CancellationToken, requestProcessor: (request: REQUEST, reject: (error: Error) => void) => void, redirectCount: number): Promise<T>\n\n  abstract download(url: string, destination: string, options?: DownloadOptions | null): Promise<string>\n\n  protected handleResponse(response: Response, options: RequestOptions, cancellationToken: CancellationToken, resolve: (data?: any) => void, reject: (error: Error) => void, redirectCount: number, requestProcessor: (request: REQUEST, reject: (error: Error) => void) => void) {\n    if (this.debug.enabled) {\n      this.debug(`Response status: ${response.statusCode} ${response.statusMessage}, request options: ${dumpRequestOptions(options)}`)\n    }\n\n    // we handle any other >= 400 error on request end (read detailed message in the response body)\n    if (response.statusCode === 404) {\n      // error is clear, we don't need to read detailed error description\n      reject(new HttpError(response, `method: ${options.method} url: https://${options.hostname}${options.path}\n\n    Please double check that your authentication token is correct. Due to security reasons actual status maybe not reported, but 404.\n    `))\n      return\n    }\n    else if (response.statusCode === 204) {\n      // on DELETE request\n      resolve()\n      return\n    }\n\n    const redirectUrl = safeGetHeader(response, \"location\")\n    if (redirectUrl != null) {\n      if (redirectCount > 10) {\n        reject(new Error(\"Too many redirects (> 10)\"))\n        return\n      }\n\n      this.doApiRequest(<REQUEST_OPTS>Object.assign({}, options, parseUrl(redirectUrl)), cancellationToken, requestProcessor, redirectCount)\n        .then(resolve)\n        .catch(reject)\n\n      return\n    }\n\n    let data = \"\"\n    response.setEncoding(\"utf8\")\n    response.on(\"data\", (chunk: string) => {\n      data += chunk\n    })\n\n    response.on(\"end\", () => {\n      try {\n        const contentType = response.headers[\"content-type\"]\n        const isJson = contentType != null && (Array.isArray(contentType) ? contentType.find(it => it.includes(\"json\")) != null : contentType.includes(\"json\"))\n        if (response.statusCode != null && response.statusCode >= 400) {\n          reject(new HttpError(response, isJson ? JSON.parse(data) : data))\n        }\n        else {\n          const pathname = (<any>options).pathname || options.path\n          if (data.length === 0) {\n            resolve()\n          }\n          else if (pathname != null && pathname.endsWith(\".yml\")) {\n            resolve(safeLoad(data))\n          }\n          else {\n            resolve(isJson || (pathname != null && pathname.endsWith(\".json\")) ? JSON.parse(data) : data)\n          }\n        }\n      }\n      catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  protected abstract doRequest(options: any, callback: (response: any) => void): any\n\n  protected doDownload(requestOptions: any, destination: string, redirectCount: number, options: DownloadOptions, callback: (error: Error | null) => void) {\n    const request = this.doRequest(requestOptions, (response: Electron.IncomingMessage) => {\n      if (response.statusCode >= 400) {\n        callback(new Error(`Cannot download \"${requestOptions.protocol || \"https\"}://${requestOptions.hostname}/${requestOptions.path}\", status ${response.statusCode}: ${response.statusMessage}`))\n        return\n      }\n\n      const redirectUrl = safeGetHeader(response, \"location\")\n      if (redirectUrl != null) {\n        if (redirectCount < this.maxRedirects) {\n          const parsedUrl = parseUrl(redirectUrl)\n          this.doDownload(Object.assign({}, requestOptions, {\n            hostname: parsedUrl.hostname,\n            path: parsedUrl.path,\n            port: parsedUrl.port == null ? undefined : parsedUrl.port\n          }), destination, redirectCount++, options, callback)\n        }\n        else {\n          callback(new Error(`Too many redirects (> ${this.maxRedirects})`))\n        }\n        return\n      }\n\n      configurePipes(options, response, destination, callback)\n    })\n    this.addTimeOutHandler(request, callback)\n    request.on(\"error\", callback)\n    request.end()\n  }\n\n  protected addTimeOutHandler(request: any, callback: (error: Error) => void) {\n    request.on(\"socket\", function (socket: Socket) {\n      socket.setTimeout(60 * 1000, () => {\n        callback(new Error(\"Request timed out\"))\n        request.abort()\n      })\n    })\n  }\n}\n\nclass DigestTransform extends Transform {\n  private readonly digester = createHash(\"sha256\")\n\n  constructor(private expected: string) {\n    super()\n  }\n\n  _transform(chunk: any, encoding: string, callback: Function) {\n    this.digester.update(chunk)\n    callback(null, chunk)\n  }\n\n  _flush(callback: Function): void {\n    const hash = this.digester.digest(\"hex\")\n    callback(hash === this.expected ? null : new Error(`SHA2 checksum mismatch, expected ${this.expected}, got ${hash}`))\n  }\n}\n\nexport function request<T>(options: RequestOptions, cancellationToken: CancellationToken, data?: {[name: string]: any; } | null): Promise<T> {\n  return executorHolder.httpExecutor.request(options, cancellationToken, data)\n}\n\nfunction checkSha2(sha2Header: string | null | undefined, sha2: string | null | undefined, callback: (error: Error | null) => void): boolean {\n  if (sha2Header != null && sha2 != null) {\n    // todo why bintray doesn't send this header always\n    if (sha2Header == null) {\n      callback(new Error(\"checksum is required, but server response doesn't contain X-Checksum-Sha2 header\"))\n      return false\n    }\n    else if (sha2Header !== sha2) {\n      callback(new Error(`checksum mismatch: expected ${sha2} but got ${sha2Header} (X-Checksum-Sha2 header)`))\n      return false\n    }\n  }\n  return true\n}\n\nfunction safeGetHeader(response: any, headerKey: string) {\n  const value = response.headers[headerKey]\n  if (value == null) {\n    return null\n  }\n  else if (Array.isArray(value)) {\n    // electron API\n    return value.length === 0 ? null : value[value.length - 1]\n  }\n  else {\n    return value\n  }\n}\n\nfunction configurePipes(options: DownloadOptions, response: any, destination: string, callback: (error: Error | null) => void) {\n  if (!checkSha2(safeGetHeader(response, \"X-Checksum-Sha2\"), options.sha2, callback)) {\n    return\n  }\n\n  const streams: Array<any> = []\n  if (options.onProgress != null) {\n    const contentLength = safeGetHeader(response, \"content-length\")\n    if (contentLength != null) {\n      streams.push(new ProgressCallbackTransform(parseInt(contentLength, 10), options.cancellationToken, options.onProgress))\n    }\n  }\n\n  if (options.sha2 != null) {\n    streams.push(new DigestTransform(options.sha2))\n  }\n\n  const fileOut = createWriteStream(destination)\n  streams.push(fileOut)\n\n  let lastStream = response\n  for (const stream of streams) {\n    stream.on(\"error\", callback)\n    lastStream = lastStream.pipe(stream)\n  }\n\n  fileOut.on(\"finish\", () => (<any>fileOut.close)(callback))\n}\n\nexport function configureRequestOptions(options: RequestOptions, token?: string | null, method?: \"GET\" | \"DELETE\" | \"PUT\"): RequestOptions {\n  if (method != null) {\n    options.method = method\n  }\n\n  let headers = options.headers\n  if (headers == null) {\n    headers = {}\n    options.headers = headers\n  }\n  if (token != null) {\n    (<any>headers).authorization = token.startsWith(\"Basic\") ? token : `token ${token}`\n  }\n  if (headers[\"User-Agent\"] == null) {\n    headers[\"User-Agent\"] = \"electron-builder\"\n  }\n\n  if ((method == null || method === \"GET\") || headers[\"Cache-Control\"] == null) {\n    headers[\"Cache-Control\"] = \"no-cache\"\n  }\n  return options\n}\n\nexport function dumpRequestOptions(options: RequestOptions): string {\n  const safe: any = Object.assign({}, options)\n  if (safe.headers != null && safe.headers.authorization != null) {\n    safe.headers.authorization = \"<skipped>\"\n  }\n  return JSON.stringify(safe, null, 2)\n}"
  ]
}
