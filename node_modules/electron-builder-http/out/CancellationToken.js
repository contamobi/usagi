"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CancellationToken = undefined;

var _events;

function _load_events() {
    return _events = require("events");
}

class CancellationToken extends (_events || _load_events()).EventEmitter {
    get cancelled() {
        return this._cancelled || this._parent != null && this._parent.cancelled;
    }
    set parent(value) {
        this._parent = value;
    }
    // babel cannot compile ... correctly for super calls
    constructor() {
        super();
        this._cancelled = false;
    }
    cancel() {
        this._cancelled = true;
        this.emit("cancel");
    }
    onCancel(handler) {
        this.once("cancel", handler);
    }
    trackPromise(promise) {
        const handler = () => promise.cancel();
        this.onCancel(handler);
        // it is important to return promise, otherwise will be unhandled rejection error on reject
        return promise.finally(() => this.removeListener("cancel", handler));
    }
}
exports.CancellationToken = CancellationToken; //# sourceMappingURL=CancellationToken.js.map